<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation1_req_1.map" md5sum="073dc3cc1e91d28aee0962a3d103d10f" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		XSLTransformation1_req_1.map
*   Map declaration(s):	XSLTransformation1_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseRtrvNameList_Module%257DApp_Context/message%3D%257Bhttp%253A%252F%252FNCL_CruiseRtrvNameList_Module%252FDB_LOOKUP%257DexecuteNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseRtrvNameList_Module%257DApp_Context/message%3D%257Bhttp%253A%252F%252FNCL_WESB_Shared_Library%252FNCL_CruiseRtrvNameList_Interface%257DPerform_NCL_CruiseRtrvNameListResponseMsg/xpath%3D%252F/smo.xsd
*   XSLT import(s):   	XSLTransformation1_req_1__more_ind.xsl, XSLTransformation1_req_1_date_from.xsl, XSLTransformation1_req_1_date_to.xsl, XSLTransformation1_req_1_more_token.xsl, XSLTransformation1_req_1_custom_1.xsl
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in2="wsdl.http://NCL_CruiseRtrvNameList_Module/DB_LOOKUP"
    xmlns:in3="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_retrieve_name_list"
    xmlns:in4="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_retrieve_name_listp_cursor"
    xmlns:in5="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_retrieve_name_listbg"
    xmlns:in6="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_get_consumer_nam_list"
    xmlns:in7="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_get_consumer_nam_listbg"
    xmlns:in8="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_get_consumer_nam_listp_cursor"
    xmlns:in="http://NCL_CruiseRtrvNameList_Module/DB_LOOKUP"
    xmlns:in9="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:out="wsdl.http://NCL_WESB_Shared_Library/NCL_CruiseRtrvNameList_Interface"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io5="http://nclapi/schemas"
    xmlns:out2="http://NCL_WESB_Shared_Library/NCL_CruiseRtrvNameList_Interface"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="http://www.w3.org/2005/08/addressing"
    xmlns:io7="http://NCL_CruiseRtrvNameList_Module"
    xmlns:map="http://NCL_CruiseRtrvNameList_Module/xslt/XSLTransformation1_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in2 in3 in4 in5 in6 in7 in8 in in9 str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">

  <!-- imports  -->
  <xsl:import href="XSLTransformation1_req_1__more_ind.xsl"/>
  <xsl:import href="XSLTransformation1_req_1_date_from.xsl"/>
  <xsl:import href="XSLTransformation1_req_1_date_to.xsl"/>
  <xsl:import href="XSLTransformation1_req_1_more_token.xsl"/>
  <xsl:import href="XSLTransformation1_req_1_custom_1.xsl"/>
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLTransformation1_req_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:XSLTransformation1_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:XSLTransformation1_req_1">
    <io2:smo>
      <context>
        <correlation>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io7:App_Context'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/correlation/io5:NCL_CruiseRtrvNameListRQ"(<Anonymous>) to "io5:NCL_CruiseRtrvNameListRQ"(<Anonymous>) -->
          <xsl:if test="context/correlation/io5:NCL_CruiseRtrvNameListRQ">
            <xsl:copy-of select="context/correlation/io5:NCL_CruiseRtrvNameListRQ"/>
          </xsl:if>
          <!-- a simple data mapping: "context/correlation/LogID"(string) to "LogID"(string) -->
          <xsl:if test="context/correlation/LogID">
            <xsl:element name="LogID">
              <xsl:value-of select="context/correlation/LogID"/>
            </xsl:element>
          </xsl:if>
        </correlation>
      </context>
      <xsl:element name="body">
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out:Perform_NCL_CruiseRtrvNameListResponseMsg'"/>
        </xsl:attribute>
        <xsl:element name="out2:Perform_NCL_CruiseRtrvNameListResponse">
          <xsl:element name="io5:NCL_CruiseRtrvNameListRS">
            <!-- a simple data mapping: "context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses"(positiveInteger) to "MaxResponses"(positiveInteger) -->
            <xsl:if test="context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses">
              <xsl:attribute name="MaxResponses">
                <xsl:value-of select="context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"(NclseaNcl_Wesb_Get_Consumer_Nam_ListP_Cursor) to "MoreDataEchoToken"(StringLength1to32) -->
            <xsl:if test="body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor">
              <xsl:attribute name="MoreDataEchoToken">
                <!-- variables for custom code -->
                <xsl:variable name="p_cursor" select="body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"/>
                <xsl:call-template name="P_cursorToMoreDataEchoToken">
                  <xsl:with-param name="p_cursor" select="$p_cursor"/>
                </xsl:call-template>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"(NclseaNcl_Wesb_Get_Consumer_Nam_ListP_Cursor) to "MoreIndicator"(boolean) -->
            <xsl:if test="body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor">
              <xsl:attribute name="MoreIndicator">
                <!-- variables for custom code -->
                <xsl:variable name="p_cursor" select="body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"/>
                <xsl:variable name="MaxResponses" select="context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses"/>
                <xsl:call-template name="P_cursorToMoreIndicator">
                  <xsl:with-param name="MaxResponses" select="$MaxResponses"/>
                  <xsl:with-param name="p_cursor" select="$p_cursor"/>
                </xsl:call-template>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "context/correlation/io5:NCL_CruiseRtrvNameListRQ/@TransactionIdentifier"(StringLength1to32) to "TransactionIdentifier"(StringLength1to32) -->
            <xsl:if test="context/correlation/io5:NCL_CruiseRtrvNameListRQ/@TransactionIdentifier">
              <xsl:attribute name="TransactionIdentifier">
                <xsl:value-of select="context/correlation/io5:NCL_CruiseRtrvNameListRQ/@TransactionIdentifier"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "context/correlation/io5:NCL_CruiseRtrvNameListRQ/@Version"(decimal) to "Version"(decimal) -->
            <xsl:attribute name="Version">
              <xsl:value-of select="context/correlation/io5:NCL_CruiseRtrvNameListRQ/@Version"/>
            </xsl:attribute>
            <!-- a structural mapping with no associated source:  to "io5:Success"(SuccessType) -->
            <xsl:element name="io5:Success">
              <xsl:call-template name="ToSuccess"/>
            </xsl:element>
            <xsl:element name="io5:GuestsInfo">
              <!-- a for-each transform: "p_cursor"(NclseaNcl_Wesb_Get_Consumer_Nam_ListP_Cursor) to "io5:GuestInfo"(<Anonymous>) -->
              <xsl:apply-templates select="body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor" mode="localP_cursorToGuestInfo_1306760970"/>
            </xsl:element>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:XSLTransformation1_req_12">
    <xsl:param name="smo"/>
    <context>
      <correlation>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io7:App_Context'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ"(<Anonymous>) to "io5:NCL_CruiseRtrvNameListRQ"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ">
          <xsl:copy-of select="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ"/>
        </xsl:if>
        <!-- a simple data mapping: "$smo/context/correlation/LogID"(string) to "LogID"(string) -->
        <xsl:if test="$smo/context/correlation/LogID">
          <xsl:element name="LogID">
            <xsl:value-of select="$smo/context/correlation/LogID"/>
          </xsl:element>
        </xsl:if>
      </correlation>
    </context>
    <xsl:element name="body">
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:Perform_NCL_CruiseRtrvNameListResponseMsg'"/>
      </xsl:attribute>
      <xsl:element name="out2:Perform_NCL_CruiseRtrvNameListResponse">
        <xsl:element name="io5:NCL_CruiseRtrvNameListRS">
          <!-- a simple data mapping: "$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses"(positiveInteger) to "MaxResponses"(positiveInteger) -->
          <xsl:if test="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses">
            <xsl:attribute name="MaxResponses">
              <xsl:value-of select="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"(NclseaNcl_Wesb_Get_Consumer_Nam_ListP_Cursor) to "MoreDataEchoToken"(StringLength1to32) -->
          <xsl:if test="$smo/body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor">
            <xsl:attribute name="MoreDataEchoToken">
              <!-- variables for custom code -->
              <xsl:variable name="p_cursor" select="$smo/body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"/>
              <xsl:call-template name="P_cursorToMoreDataEchoToken">
                <xsl:with-param name="p_cursor" select="$p_cursor"/>
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"(NclseaNcl_Wesb_Get_Consumer_Nam_ListP_Cursor) to "MoreIndicator"(boolean) -->
          <xsl:if test="$smo/body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor">
            <xsl:attribute name="MoreIndicator">
              <!-- variables for custom code -->
              <xsl:variable name="p_cursor" select="$smo/body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor"/>
              <xsl:variable name="MaxResponses" select="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@MaxResponses"/>
              <xsl:call-template name="P_cursorToMoreIndicator">
                <xsl:with-param name="MaxResponses" select="$MaxResponses"/>
                <xsl:with-param name="p_cursor" select="$p_cursor"/>
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@TransactionIdentifier"(StringLength1to32) to "TransactionIdentifier"(StringLength1to32) -->
          <xsl:if test="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@TransactionIdentifier">
            <xsl:attribute name="TransactionIdentifier">
              <xsl:value-of select="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@TransactionIdentifier"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@Version"(decimal) to "Version"(decimal) -->
          <xsl:attribute name="Version">
            <xsl:value-of select="$smo/context/correlation/io5:NCL_CruiseRtrvNameListRQ/@Version"/>
          </xsl:attribute>
          <!-- a structural mapping with no associated source:  to "io5:Success"(SuccessType) -->
          <xsl:element name="io5:Success">
            <xsl:call-template name="ToSuccess"/>
          </xsl:element>
          <xsl:element name="io5:GuestsInfo">
            <!-- a for-each transform: "p_cursor"(NclseaNcl_Wesb_Get_Consumer_Nam_ListP_Cursor) to "io5:GuestInfo"(<Anonymous>) -->
            <xsl:apply-templates select="$smo/body/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGResponse/in:executeNclseaNcl_Wesb_Get_Consumer_Nam_ListBGOutput/NclseaNcl_Wesb_Get_Consumer_Nam_List/p_cursor" mode="localP_cursorToGuestInfo_1306760970"/>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </xsl:element>
  </xsl:template>

  <!-- This rule represents a for-each transform: "p_cursor" to "io5:GuestInfo".  -->
  <xsl:template match="p_cursor"  mode="localP_cursorToGuestInfo_1306760970">
    <io5:GuestInfo>
      <!-- a simple data mapping: "age"(decimal) to "Age"(StringLength1to16) -->
      <xsl:if test="age">
        <xsl:attribute name="Age">
          <xsl:value-of select="age"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "sex"(string) to "Gender"(<NMTOKEN>) -->
      <xsl:if test="sex">
        <xsl:attribute name="Gender">
          <xsl:value-of select="sex"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "client_id"(decimal) to "LoyaltyMembershipID"(StringLength1to32) -->
      <xsl:if test="client_id">
        <xsl:attribute name="LoyaltyMembershipID">
          <xsl:value-of select="client_id"/>
        </xsl:attribute>
      </xsl:if>
      <io5:SailingInfo>
        <io5:SelectedSailing>
          <!-- a simple data mapping: "sail_date_to"(string) to "End"(DateOrTimeOrDateTimeType) -->
          <xsl:if test="sail_date_to">
            <xsl:attribute name="End">
              <!-- variables for custom code -->
              <xsl:variable name="sail_date_to" select="sail_date_to"/>
              <xsl:call-template name="Sail_date_toToEnd">
                <xsl:with-param name="sail_date_to" select="$sail_date_to"/>
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "sail_date_from"(string) to "Start"(DateOrTimeOrDateTimeType) -->
          <xsl:if test="sail_date_from">
            <xsl:attribute name="Start">
              <!-- variables for custom code -->
              <xsl:variable name="sail_date_from" select="sail_date_from"/>
              <xsl:call-template name="Sail_date_fromToStart">
                <xsl:with-param name="sail_date_from" select="$sail_date_from"/>
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "package_id"(decimal) to "VoyageID"(StringLength1to32) -->
          <xsl:if test="package_id">
            <xsl:attribute name="VoyageID">
              <xsl:value-of select="package_id"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:element name="io5:CruiseLine">
            <!-- a simple data mapping: "ship_code"(string) to "ShipCode"(StringLength1to16) -->
            <xsl:if test="ship_code">
              <xsl:attribute name="ShipCode">
                <xsl:value-of select="ship_code"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "cruise_line_code"(string) to "ShipName"(StringLength1to64) -->
            <xsl:if test="cruise_line_code">
              <xsl:attribute name="ShipName">
                <xsl:value-of select="cruise_line_code"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple mapping with no associated source:  to "VendorCode"(StringLength1to8) -->
            <xsl:attribute name="VendorCode">
              <xsl:value-of select="'NCL'"/>
            </xsl:attribute>
            <!-- a simple mapping with no associated source:  to "VendorName"(StringLength1to64) -->
            <xsl:attribute name="VendorName">
              <xsl:value-of select="'Norwegian Cruise Line'"/>
            </xsl:attribute>
          </xsl:element>
        </io5:SelectedSailing>
        <xsl:element name="io5:SelectedCategory">
          <!-- a simple data mapping: "priced_category"(string) to "BerthedCategoryCode"(StringLength1to8) -->
          <xsl:if test="priced_category">
            <xsl:attribute name="BerthedCategoryCode">
              <xsl:value-of select="priced_category"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "priced_category"(string) to "PricedCategoryCode"(StringLength1to8) -->
          <xsl:if test="priced_category">
            <xsl:attribute name="PricedCategoryCode">
              <xsl:value-of select="priced_category"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:element name="io5:SelectedCabin">
            <!-- a simple data mapping: "cabin_nbr"(string) to "CabinNumber"(StringLength1to8) -->
            <xsl:attribute name="CabinNumber">
              <xsl:value-of select="cabin_nbr"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:element>
      </io5:SailingInfo>
      <xsl:element name="io5:ReservationID">
        <!-- a simple data mapping: "res_id"(decimal) to "ID"(StringLength1to32) -->
        <xsl:attribute name="ID">
          <xsl:value-of select="res_id"/>
        </xsl:attribute>
        <!-- a simple mapping with no associated source:  to "Type"(OTA_CodeType) -->
        <xsl:attribute name="Type">
          <xsl:value-of select="'14'"/>
        </xsl:attribute>
        <!-- a simple data mapping: "res_status"(string) to "Status"(OTA_CodeType) -->
        <xsl:if test="res_status">
          <xsl:attribute name="Status">
            <xsl:value-of select="res_status"/>
          </xsl:attribute>
        </xsl:if>
        <xsl:element name="io5:CompanyName">
          <!-- a simple data mapping: "source_code"(string) to "Code"(StringLength1to16) -->
          <xsl:if test="source_code">
            <xsl:attribute name="Code">
              <xsl:value-of select="source_code"/>
            </xsl:attribute>
          </xsl:if>
        </xsl:element>
      </xsl:element>
      <!-- a simple data mapping: "edoc_avail"(string) to "io5:EdocAvail"(string) -->
      <io5:EdocAvail>
        <xsl:value-of select="edoc_avail"/>
      </io5:EdocAvail>
      <!-- a simple data mapping: "apis_flag"(string) to "io5:ApisFlag"(string) -->
      <io5:ApisFlag>
        <xsl:value-of select="apis_flag"/>
      </io5:ApisFlag>
      <!-- a simple data mapping: "net_due"(decimal) to "io5:NetDue"(string) -->
      <io5:NetDue>
        <xsl:value-of select="net_due"/>
      </io5:NetDue>
      <!-- a simple data mapping: "sail_id"(decimal) to "io5:SailID"(string) -->
      <io5:SailID>
        <xsl:value-of select="sail_id"/>
      </io5:SailID>
      <io5:PersonName>
        <!-- a simple data mapping: "title"(string) to "io5:NamePrefix"(StringLength1to16) -->
        <xsl:if test="title">
          <xsl:element name="io5:NamePrefix">
            <xsl:value-of select="title"/>
          </xsl:element>
        </xsl:if>
        <!-- a simple data mapping: "first_name"(string) to "io5:GivenName"(StringLength1to64) -->
        <xsl:if test="first_name">
          <xsl:element name="io5:GivenName">
            <xsl:value-of select="first_name"/>
          </xsl:element>
        </xsl:if>
        <!-- a simple data mapping: "last_name"(string) to "io5:Surname"(StringLength1to64) -->
        <xsl:element name="io5:Surname">
          <xsl:value-of select="last_name"/>
        </xsl:element>
      </io5:PersonName>
      <xsl:element name="io5:GroupInfo">
        <!-- a simple data mapping: "group_id"(decimal) to "GroupCode"(StringLength1to16) -->
        <xsl:if test="group_id">
          <xsl:attribute name="GroupCode">
            <xsl:value-of select="group_id"/>
          </xsl:attribute>
        </xsl:if>
      </xsl:element>
    </io5:GuestInfo>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
