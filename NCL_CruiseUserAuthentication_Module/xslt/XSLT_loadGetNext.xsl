<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLT_loadGetNext.map" md5sum="dbe25e73656e55a25278e1685cbfd569" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		XSLT_loadGetNext.map
*   Map declaration(s):	XSLT_loadGetNext
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseUserAuthentication_Module%257DApp_context/message%3D%257Bhttp%253A%252F%252FNCL_WESB_Shared_Library%252FNCL_CruiseUserAuthentication_Interface%257DPerform_NCL_CruiseUserAuthenticationRequestMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseUserAuthentication_Module%257DApp_context/message%3D%257Bhttp%253A%252F%252FNCL_CruiseUserAuthentication_Module%252FJDBCImport%257DretrieveallgetNextRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://NCL_WESB_Shared_Library/NCL_CruiseUserAuthentication_Interface"
    xmlns:in2="wsdl.http://NCL_WESB_Shared_Library/NCL_CruiseUserAuthentication_Interface"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/getnextcontainer"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out2="wsdl.http://NCL_CruiseUserAuthentication_Module/JDBCImport"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:out3="http://com/ibm/j2ca/fault"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:out4="http://NCL_CruiseUserAuthentication_Module/JDBCImport"
    xmlns:io6="http://nclapi/schemas"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io7="http://NCL_CruiseUserAuthentication_Module"
    xmlns:out5="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/getnext"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="http://www.w3.org/2005/08/addressing"
    xmlns:out6="http://com/ibm/j2ca/fault/afcfault"
    xmlns:map="http://NCL_CruiseUserAuthentication_Module/xslt/XSLT_loadGetNext"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in in2 str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLT_loadGetNext2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:XSLT_loadGetNext"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:XSLT_loadGetNext">
    <io2:smo>
      <context>
        <correlation>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io7:App_context'"/>
          </xsl:attribute>
          <!-- a structural mapping: "body/in:Perform_NCL_CruiseUserAuthentication/io6:NCL_CruiseUserAuthenticationRQ"(<Anonymous>) to "io6:NCL_CruiseUserAuthenticationRQ"(<Anonymous>) -->
          <xsl:if test="body/in:Perform_NCL_CruiseUserAuthentication/io6:NCL_CruiseUserAuthenticationRQ">
            <xsl:copy-of select="body/in:Perform_NCL_CruiseUserAuthentication/io6:NCL_CruiseUserAuthenticationRQ"/>
          </xsl:if>
        </correlation>
      </context>
      <xsl:element name="body">
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out2:retrieveallgetNextRequestMsg'"/>
        </xsl:attribute>
        <xsl:element name="out4:retrieveallgetNext">
          <xsl:element name="out4:retrieveallgetNextInput">
            <!-- a simple mapping with no associated source:  to "parameter1"(string) -->
            <xsl:element name="parameter1">
              <xsl:text>10</xsl:text>
            </xsl:element>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:XSLT_loadGetNext2">
    <xsl:param name="smo"/>
    <context>
      <correlation>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io7:App_context'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/body/in:Perform_NCL_CruiseUserAuthentication/io6:NCL_CruiseUserAuthenticationRQ"(<Anonymous>) to "io6:NCL_CruiseUserAuthenticationRQ"(<Anonymous>) -->
        <xsl:if test="$smo/body/in:Perform_NCL_CruiseUserAuthentication/io6:NCL_CruiseUserAuthenticationRQ">
          <xsl:copy-of select="$smo/body/in:Perform_NCL_CruiseUserAuthentication/io6:NCL_CruiseUserAuthenticationRQ"/>
        </xsl:if>
      </correlation>
    </context>
    <xsl:element name="body">
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out2:retrieveallgetNextRequestMsg'"/>
      </xsl:attribute>
      <xsl:element name="out4:retrieveallgetNext">
        <xsl:element name="out4:retrieveallgetNextInput">
          <!-- a simple mapping with no associated source:  to "parameter1"(string) -->
          <xsl:element name="parameter1">
            <xsl:text>10</xsl:text>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </xsl:element>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
