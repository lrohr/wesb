<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation2_req_1.map" md5sum="2879663881bc9b5accc1d253d6d59553" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		XSLTransformation2_req_1.map
*   Map declaration(s):	XSLTransformation2_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_LATITUDES_CLIENT_JRN_Module%257DAppContext/message%3D%257Bhttp%253A%252F%252FNCL_LATITUDES_CLIENT_JRN_Module%252FJDBCImport%257DexecuteNclseaNcl_Lat_Get_JrnResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_LATITUDES_CLIENT_JRN_Module%257DAppContext/xpath%3D%252F/smo.xsd
*   XSLT import(s):   	XSLTransformation2_req_1_ErrMsg.xsl, XSLTransformation2_req_1_custom.xsl, XSLTransformation2_req_1_ErrCode.xsl
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_lat_get_dtl"
    xmlns:in2="http://NCL_LATITUDES_CLIENT_JRN_Module/JDBCImport"
    xmlns:in3="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_lat_get_dtlp_cursor"
    xmlns:in4="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_lat_get_jrn"
    xmlns:in5="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_lat_get_jrnp_cursor"
    xmlns:in6="wsdl.http://NCL_LATITUDES_CLIENT_JRN_Module/JDBCImport"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io5="http://NCL_LATITUDES_CLIENT_JRN_Module"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://NCL_LATITUDES_CLIENT_JRN_Module/xslt/XSLTransformation2_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in in2 in3 in4 in5 in6 str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">

  <!-- imports  -->
  <xsl:import href="XSLTransformation2_req_1_ErrMsg.xsl"/>
  <xsl:import href="XSLTransformation2_req_1_custom.xsl"/>
  <xsl:import href="XSLTransformation2_req_1_ErrCode.xsl"/>
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLTransformation2_req_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:XSLTransformation2_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:XSLTransformation2_req_1">
    <io2:smo>
      <context>
        <correlation>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io5:AppContext'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/correlation/NCL_LATITUDES_CLIENT_JRN_REQ"(<Anonymous>) to "NCL_LATITUDES_CLIENT_JRN_REQ"(<Anonymous>) -->
          <xsl:if test="context/correlation/NCL_LATITUDES_CLIENT_JRN_REQ">
            <xsl:copy-of select="context/correlation/NCL_LATITUDES_CLIENT_JRN_REQ"/>
          </xsl:if>
          <xsl:element name="NCL_LATITUDES_CLIENT_JRN_RESP">
            <xsl:element name="TRANSACTIONS">
              <!-- a for-each transform: "p_cursor"(NclseaNcl_Lat_Get_JrnP_Cursor) to "TRANSACTION"(<Anonymous>) -->
              <xsl:apply-templates select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor" mode="localP_cursorToTRANSACTION_968255532"/>
            </xsl:element>
            <!-- a simple data mapping: "body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_client_id"(string) to "CLIENT_ID"(string) -->
            <xsl:if test="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_client_id">
              <xsl:element name="CLIENT_ID">
                <xsl:value-of select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_client_id"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"(NclseaNcl_Lat_Get_Jrn) to "TOTAL_POINTS"(decimal) -->
            <xsl:if test="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput">
              <xsl:element name="TOTAL_POINTS">
                <!-- variables for custom code -->
                <xsl:variable name="executeNclseaNcl_Lat_Get_JrnOutput" select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"/>
                <xsl:variable name="p_cursor" select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor"/>
                <xsl:variable name="total_points_qty" select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor/total_points_qty"/>
                <xsl:call-template name="ExecuteNclseaNcl_Lat_Get_JrnOutputToTOTAL_POINTS">
                  <xsl:with-param name="executeNclseaNcl_Lat_Get_JrnOutput" select="$executeNclseaNcl_Lat_Get_JrnOutput"/>
                  <xsl:with-param name="p_cursor" select="$p_cursor"/>
                  <xsl:with-param name="total_points_qty" select="$total_points_qty"/>
                </xsl:call-template>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"(NclseaNcl_Lat_Get_Jrn) to "ERROR_MSG"(string) -->
            <xsl:if test="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput">
              <xsl:element name="ERROR_MSG">
                <!-- variables for custom code -->
                <xsl:variable name="executeNclseaNcl_Lat_Get_JrnOutput2" select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"/>
                <xsl:variable name="p_cursor2" select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor"/>
                <xsl:call-template name="ExecuteNclseaNcl_Lat_Get_JrnOutputToERROR_MSG">
                  <xsl:with-param name="executeNclseaNcl_Lat_Get_JrnOutput2" select="$executeNclseaNcl_Lat_Get_JrnOutput2"/>
                  <xsl:with-param name="p_cursor2" select="$p_cursor2"/>
                </xsl:call-template>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"(NclseaNcl_Lat_Get_Jrn) to "ERROR_CODE"(string) -->
            <xsl:if test="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput">
              <xsl:element name="ERROR_CODE">
                <!-- variables for custom code -->
                <xsl:variable name="executeNclseaNcl_Lat_Get_JrnOutput3" select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"/>
                <xsl:variable name="p_cursor3" select="body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor"/>
                <xsl:call-template name="ExecuteNclseaNcl_Lat_Get_JrnOutputToERROR_CODE">
                  <xsl:with-param name="executeNclseaNcl_Lat_Get_JrnOutput3" select="$executeNclseaNcl_Lat_Get_JrnOutput3"/>
                  <xsl:with-param name="p_cursor3" select="$p_cursor3"/>
                </xsl:call-template>
              </xsl:element>
            </xsl:if>
          </xsl:element>
          <!-- a simple data mapping: "context/correlation/LogId"(string) to "LogId"(string) -->
          <xsl:if test="context/correlation/LogId">
            <xsl:element name="LogId">
              <xsl:value-of select="context/correlation/LogId"/>
            </xsl:element>
          </xsl:if>
        </correlation>
      </context>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:XSLTransformation2_req_12">
    <xsl:param name="smo"/>
    <context>
      <correlation>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io5:AppContext'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/correlation/NCL_LATITUDES_CLIENT_JRN_REQ"(<Anonymous>) to "NCL_LATITUDES_CLIENT_JRN_REQ"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/NCL_LATITUDES_CLIENT_JRN_REQ">
          <xsl:copy-of select="$smo/context/correlation/NCL_LATITUDES_CLIENT_JRN_REQ"/>
        </xsl:if>
        <xsl:element name="NCL_LATITUDES_CLIENT_JRN_RESP">
          <xsl:element name="TRANSACTIONS">
            <!-- a for-each transform: "p_cursor"(NclseaNcl_Lat_Get_JrnP_Cursor) to "TRANSACTION"(<Anonymous>) -->
            <xsl:apply-templates select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor" mode="localP_cursorToTRANSACTION_968255532"/>
          </xsl:element>
          <!-- a simple data mapping: "$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_client_id"(string) to "CLIENT_ID"(string) -->
          <xsl:if test="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_client_id">
            <xsl:element name="CLIENT_ID">
              <xsl:value-of select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_client_id"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"(NclseaNcl_Lat_Get_Jrn) to "TOTAL_POINTS"(decimal) -->
          <xsl:if test="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput">
            <xsl:element name="TOTAL_POINTS">
              <!-- variables for custom code -->
              <xsl:variable name="executeNclseaNcl_Lat_Get_JrnOutput" select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"/>
              <xsl:variable name="p_cursor" select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor"/>
              <xsl:variable name="total_points_qty" select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor/total_points_qty"/>
              <xsl:call-template name="ExecuteNclseaNcl_Lat_Get_JrnOutputToTOTAL_POINTS">
                <xsl:with-param name="executeNclseaNcl_Lat_Get_JrnOutput" select="$executeNclseaNcl_Lat_Get_JrnOutput"/>
                <xsl:with-param name="p_cursor" select="$p_cursor"/>
                <xsl:with-param name="total_points_qty" select="$total_points_qty"/>
              </xsl:call-template>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"(NclseaNcl_Lat_Get_Jrn) to "ERROR_MSG"(string) -->
          <xsl:if test="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput">
            <xsl:element name="ERROR_MSG">
              <!-- variables for custom code -->
              <xsl:variable name="executeNclseaNcl_Lat_Get_JrnOutput2" select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"/>
              <xsl:variable name="p_cursor2" select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor"/>
              <xsl:call-template name="ExecuteNclseaNcl_Lat_Get_JrnOutputToERROR_MSG">
                <xsl:with-param name="executeNclseaNcl_Lat_Get_JrnOutput2" select="$executeNclseaNcl_Lat_Get_JrnOutput2"/>
                <xsl:with-param name="p_cursor2" select="$p_cursor2"/>
              </xsl:call-template>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"(NclseaNcl_Lat_Get_Jrn) to "ERROR_CODE"(string) -->
          <xsl:if test="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput">
            <xsl:element name="ERROR_CODE">
              <!-- variables for custom code -->
              <xsl:variable name="executeNclseaNcl_Lat_Get_JrnOutput3" select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput"/>
              <xsl:variable name="p_cursor3" select="$smo/body/in2:executeNclseaNcl_Lat_Get_JrnResponse/in2:executeNclseaNcl_Lat_Get_JrnOutput/p_cursor"/>
              <xsl:call-template name="ExecuteNclseaNcl_Lat_Get_JrnOutputToERROR_CODE">
                <xsl:with-param name="executeNclseaNcl_Lat_Get_JrnOutput3" select="$executeNclseaNcl_Lat_Get_JrnOutput3"/>
                <xsl:with-param name="p_cursor3" select="$p_cursor3"/>
              </xsl:call-template>
            </xsl:element>
          </xsl:if>
        </xsl:element>
        <!-- a simple data mapping: "$smo/context/correlation/LogId"(string) to "LogId"(string) -->
        <xsl:if test="$smo/context/correlation/LogId">
          <xsl:element name="LogId">
            <xsl:value-of select="$smo/context/correlation/LogId"/>
          </xsl:element>
        </xsl:if>
      </correlation>
    </context>
  </xsl:template>

  <!-- This rule represents a for-each transform: "p_cursor" to "TRANSACTION".  -->
  <xsl:template match="p_cursor"  mode="localP_cursorToTRANSACTION_968255532">
    <TRANSACTION>
      <!-- a simple data mapping: "record_id"(string) to "RECORD_ID"(string) -->
      <RECORD_ID>
        <xsl:value-of select="record_id"/>
      </RECORD_ID>
      <!-- a simple data mapping: "res_id"(string) to "RES_ID"(string) -->
      <xsl:if test="res_id">
        <RES_ID>
          <xsl:value-of select="res_id"/>
        </RES_ID>
      </xsl:if>
      <!-- a simple data mapping: "ship_name"(string) to "SHIP_NAME"(string) -->
      <xsl:if test="ship_name">
        <SHIP_NAME>
          <xsl:value-of select="ship_name"/>
        </SHIP_NAME>
      </xsl:if>
      <!-- a simple data mapping: "sail_date_from"(string) to "SAIL_DATE_FROM"(string) -->
      <xsl:if test="sail_date_from">
        <SAIL_DATE_FROM>
          <xsl:value-of select="sail_date_from"/>
        </SAIL_DATE_FROM>
      </xsl:if>
      <!-- a simple data mapping: "sail_date_to"(string) to "SAIL_DATE_TO"(string) -->
      <xsl:if test="sail_date_to">
        <SAIL_DATE_TO>
          <xsl:value-of select="sail_date_to"/>
        </SAIL_DATE_TO>
      </xsl:if>
      <!-- a simple data mapping: "activity_desc"(string) to "ACTIVITY_DESC"(string) -->
      <xsl:if test="activity_desc">
        <ACTIVITY_DESC>
          <xsl:value-of select="activity_desc"/>
        </ACTIVITY_DESC>
      </xsl:if>
      <!-- a simple data mapping: "meta_category"(string) to "META_CAT"(string) -->
      <xsl:if test="meta_category">
        <META_CAT>
          <xsl:value-of select="meta_category"/>
        </META_CAT>
      </xsl:if>
      <!-- a simple data mapping: "res_init_date"(string) to "RES_INIT_DATE"(string) -->
      <xsl:if test="res_init_date">
        <RES_INIT_DATE>
          <xsl:value-of select="res_init_date"/>
        </RES_INIT_DATE>
      </xsl:if>
      <!-- a simple data mapping: "total_points_qty"(decimal) to "POINTS"(string) -->
      <POINTS>
        <xsl:value-of select="total_points_qty"/>
      </POINTS>
      <!-- a simple data mapping: "date_time_stamp"(string) to "DATE_TIME"(string) -->
      <DATE_TIME>
        <xsl:value-of select="date_time_stamp"/>
      </DATE_TIME>
      <!-- a simple data mapping: "user_id"(string) to "USER"(string) -->
      <USER>
        <xsl:value-of select="user_id"/>
      </USER>
    </TRANSACTION>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
