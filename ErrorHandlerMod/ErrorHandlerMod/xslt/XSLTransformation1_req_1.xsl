<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation1_req_1.map" md5sum="cecec7704db6289f25935aba30b4a5cc" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		XSLTransformation1_req_1.map
*   Map declaration(s):	XSLTransformation1_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FNCL_WESB_Shared_Library%252FErrorHandlerInterface%257DhandleAndGetResponseRequestMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FE-Mail_Generic%252FE-Mail_Interface%257DSend_Email1RequestMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://NCL_WESB_Shared_Library/ErrorHandlerInterface"
    xmlns:in2="http://NCL_WESB_Shared_Library"
    xmlns:in3="wsdl.http://NCL_WESB_Shared_Library/ErrorHandlerInterface"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:out="wsdl.http://E-Mail_Generic/E-Mail_Interface"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:out2="http://E-Mail_Generic/E-Mail_Interface"
    xmlns:ErrorHandlerUtils="xalan://com.ncl.wesb.ErrorHandlerUtils"
    xmlns:map="http://ErrorHandlerMod/xslt/XSLTransformation1_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in in2 in3 str set math fn regexp dyn dp exsl date ErrorHandlerUtils map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'out:Send_Email1RequestMsg'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLTransformation1_req_12">
              <xsl:with-param name="body" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="body" mode="map:XSLTransformation1_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:XSLTransformation1_req_1">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:Send_Email1RequestMsg'"/>
      </xsl:attribute>
      <out2:Send_Email1>
        <!-- a simple mapping with no associated source:  to "To"(string) -->
        <xsl:element name="To">
          <xsl:text>esbteam@ncl.com</xsl:text>
        </xsl:element>
        <!-- a simple mapping with no associated source:  to "Subject"(string) -->
        <xsl:element name="Subject">
          <xsl:text>WESB Exception</xsl:text>
        </xsl:element>
        <!-- a simple data mapping: "in:handleAndGetResponse/error"(ErrorHandlerBO) to "Content"(string) -->
        <xsl:element name="Content">
          <!-- variables for custom code -->
          <xsl:variable name="error" select="in:handleAndGetResponse/error"/>
          <xsl:value-of select="ErrorHandlerUtils:getEmailBody($error)"/>
        </xsl:element>
        <Severity xsi:nil="true"/>
      </out2:Send_Email1>
    </body>
  </xsl:template>

  <!-- This rule represents a type mapping: "body" to "body".  -->
  <xsl:template name="map:XSLTransformation1_req_12">
    <xsl:param name="body"/>
    <out2:Send_Email1>
      <!-- a simple mapping with no associated source:  to "To"(string) -->
      <xsl:element name="To">
        <xsl:text>esbteam@ncl.com</xsl:text>
      </xsl:element>
      <!-- a simple mapping with no associated source:  to "Subject"(string) -->
      <xsl:element name="Subject">
        <xsl:text>WESB Exception</xsl:text>
      </xsl:element>
      <!-- a simple data mapping: "$body/in:handleAndGetResponse/error"(ErrorHandlerBO) to "Content"(string) -->
      <xsl:element name="Content">
        <!-- variables for custom code -->
        <xsl:variable name="error" select="$body/in:handleAndGetResponse/error"/>
        <xsl:value-of select="ErrorHandlerUtils:getEmailBody($error)"/>
      </xsl:element>
      <Severity xsi:nil="true"/>
    </out2:Send_Email1>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
