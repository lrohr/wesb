<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/To_store_Link_req_1.map" md5sum="f40fe10e89c2a43a802ab4ce45cda15f" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		To_store_Link_req_1.map
*   Map declaration(s):	To_store_Link_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FLink_Reservation%257Dapp_context/message%3D%257Bhttp%253A%252F%252FLink_Reservation%252FDB_LinkReservation%257DexecuteNclseaNcl_Wesb_Get_Client_ProfileBGResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FLink_Reservation%257Dapp_context/message%3D%257Bhttp%253A%252F%252FLink_Reservation%252FDB_LinkReservation%257DexecuteNclseaNcl_Wesb_Create_Client_LinkBGRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:io="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_create_client_link"
    xmlns:io12="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io13="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io2="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_create_client_linkbg"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io3="http://Link_Reservation/DB_LinkReservation"
    xmlns:io4="wsdl.http://Link_Reservation/DB_LinkReservation"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_get_client_profile"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io7="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io9="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_get_client_profilep_cursor"
    xmlns:io8="http://nclapi/schemas"
    xmlns:io10="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_get_client_profilebg"
    xmlns:io14="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io11="http://Link_Reservation"
    xmlns:io15="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io16="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://Link_Reservation/xslt/To_store_Link_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io13:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:To_store_Link_req_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io13:smo" mode="map:To_store_Link_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io13:smo" to "io13:smo".  -->
  <xsl:template match="io13:smo"  mode="map:To_store_Link_req_1">
    <io13:smo>
      <context>
        <correlation>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io11:app_context'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/correlation/io8:NCL_CruiseLinkReservationRQ"(<Anonymous>) to "io8:NCL_CruiseLinkReservationRQ"(<Anonymous>) -->
          <xsl:if test="context/correlation/io8:NCL_CruiseLinkReservationRQ">
            <xsl:copy-of select="context/correlation/io8:NCL_CruiseLinkReservationRQ"/>
          </xsl:if>
          <!-- a simple data mapping: "context/correlation/LogID"(string) to "LogID"(string) -->
          <xsl:if test="context/correlation/LogID">
            <xsl:element name="LogID">
              <xsl:value-of select="context/correlation/LogID"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/client_id"(string) to "Error_code"(string) -->
          <xsl:if test="body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/client_id">
            <xsl:element name="Error_code">
              <xsl:value-of select="body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/client_id"/>
            </xsl:element>
          </xsl:if>
        </correlation>
      </context>
      <xsl:element name="body">
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io4:executeNclseaNcl_Wesb_Create_Client_LinkBGRequestMsg'"/>
        </xsl:attribute>
        <xsl:element name="io3:executeNclseaNcl_Wesb_Create_Client_LinkBG">
          <xsl:element name="io3:executeNclseaNcl_Wesb_Create_Client_LinkBGInput">
            <xsl:element name="NclseaNcl_Wesb_Create_Client_Link">
              <!-- a simple data mapping: "body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid"(int) to "p_clientid"(int) -->
              <xsl:if test="body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid">
                <xsl:choose>
                  <xsl:when test="normalize-space(string(body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid))">
                    <xsl:element name="p_clientid">
                      <xsl:value-of select="body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid"/>
                    </xsl:element>
                  </xsl:when>
                  <xsl:otherwise>
                    <p_clientid xsi:nil="true"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:if>
              <!-- a simple data mapping: "body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name"(string) to "p_user_name"(string) -->
              <xsl:if test="body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name">
                <xsl:choose>
                  <xsl:when test="normalize-space(body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name)">
                    <xsl:element name="p_user_name">
                      <xsl:value-of select="body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name"/>
                    </xsl:element>
                  </xsl:when>
                  <xsl:otherwise>
                    <p_user_name xsi:nil="true"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/io8:NCL_CruiseLinkReservationRQ/io8:UserLogin/@UserLoginName"(StringLength1to64) to "p_user_name_incoming"(string) -->
              <xsl:if test="context/correlation/io8:NCL_CruiseLinkReservationRQ/io8:UserLogin/@UserLoginName">
                <xsl:element name="p_user_name_incoming">
                  <xsl:value-of select="context/correlation/io8:NCL_CruiseLinkReservationRQ/io8:UserLogin/@UserLoginName"/>
                </xsl:element>
              </xsl:if>
            </xsl:element>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </io13:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io13:smo" to "io13:smo".  -->
  <xsl:template name="map:To_store_Link_req_12">
    <xsl:param name="smo"/>
    <context>
      <correlation>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io11:app_context'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/correlation/io8:NCL_CruiseLinkReservationRQ"(<Anonymous>) to "io8:NCL_CruiseLinkReservationRQ"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/io8:NCL_CruiseLinkReservationRQ">
          <xsl:copy-of select="$smo/context/correlation/io8:NCL_CruiseLinkReservationRQ"/>
        </xsl:if>
        <!-- a simple data mapping: "$smo/context/correlation/LogID"(string) to "LogID"(string) -->
        <xsl:if test="$smo/context/correlation/LogID">
          <xsl:element name="LogID">
            <xsl:value-of select="$smo/context/correlation/LogID"/>
          </xsl:element>
        </xsl:if>
        <!-- a simple data mapping: "$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/client_id"(string) to "Error_code"(string) -->
        <xsl:if test="$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/client_id">
          <xsl:element name="Error_code">
            <xsl:value-of select="$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/client_id"/>
          </xsl:element>
        </xsl:if>
      </correlation>
    </context>
    <xsl:element name="body">
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'io4:executeNclseaNcl_Wesb_Create_Client_LinkBGRequestMsg'"/>
      </xsl:attribute>
      <xsl:element name="io3:executeNclseaNcl_Wesb_Create_Client_LinkBG">
        <xsl:element name="io3:executeNclseaNcl_Wesb_Create_Client_LinkBGInput">
          <xsl:element name="NclseaNcl_Wesb_Create_Client_Link">
            <!-- a simple data mapping: "$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid"(int) to "p_clientid"(int) -->
            <xsl:if test="$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid">
              <xsl:choose>
                <xsl:when test="normalize-space(string($smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid))">
                  <xsl:element name="p_clientid">
                    <xsl:value-of select="$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_clientid"/>
                  </xsl:element>
                </xsl:when>
                <xsl:otherwise>
                  <p_clientid xsi:nil="true"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <!-- a simple data mapping: "$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name"(string) to "p_user_name"(string) -->
            <xsl:if test="$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name">
              <xsl:choose>
                <xsl:when test="normalize-space($smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name)">
                  <xsl:element name="p_user_name">
                    <xsl:value-of select="$smo/body/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGResponse/io3:executeNclseaNcl_Wesb_Get_Client_ProfileBGOutput/NclseaNcl_Wesb_Get_Client_Profile/p_cursor[1]/web_login_name"/>
                  </xsl:element>
                </xsl:when>
                <xsl:otherwise>
                  <p_user_name xsi:nil="true"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/io8:NCL_CruiseLinkReservationRQ/io8:UserLogin/@UserLoginName"(StringLength1to64) to "p_user_name_incoming"(string) -->
            <xsl:if test="$smo/context/correlation/io8:NCL_CruiseLinkReservationRQ/io8:UserLogin/@UserLoginName">
              <xsl:element name="p_user_name_incoming">
                <xsl:value-of select="$smo/context/correlation/io8:NCL_CruiseLinkReservationRQ/io8:UserLogin/@UserLoginName"/>
              </xsl:element>
            </xsl:if>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </xsl:element>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
