<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation1_req_4.map" md5sum="3431835f7f4d527db439b745cd8f63bd" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		XSLTransformation1_req_4.map
*   Map declaration(s):	XSLTransformation1_req_4
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FFuseBoxLib%252FProcessFailedCreditCard%257DprocessFailedTxnRequestMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FNCLFuseBoxMediation%252FFindFailedCCTxnSQLImport%257DretrieveallFailedCreditCardTxnBGRequestMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://FuseBoxLib/ProcessFailedCreditCard"
    xmlns:in2="wsdl.http://FuseBoxLib/ProcessFailedCreditCard"
    xmlns:in3="http://FuseBoxLib"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/failedcreditcardtxncontainer"
    xmlns:out2="wsdl.http://NCLFuseBoxMediation/FindFailedCCTxnSQLImport"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:out3="http://com/ibm/j2ca/fault"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:out4="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/failedcreditcardtxn"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:out5="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:out6="http://NCLFuseBoxMediation/FindFailedCCTxnSQLImport"
    xmlns:out7="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/failedcreditcardtxnbg"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:out8="http://com/ibm/j2ca/fault/afcfault"
    xmlns:map="http://NCLFuseBoxMediation/xslt/XSLTransformation1_req_4"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in in2 in3 str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'out2:retrieveallFailedCreditCardTxnBGRequestMsg'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLTransformation1_req_42">
              <xsl:with-param name="body" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="body" mode="map:XSLTransformation1_req_4"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:XSLTransformation1_req_4">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out2:retrieveallFailedCreditCardTxnBGRequestMsg'"/>
      </xsl:attribute>
      <out6:retrieveallFailedCreditCardTxnBG>
        <out6:retrieveallFailedCreditCardTxnBGInput>
          <!-- a simple mapping with no associated source:  to "verb"(<string>) -->
          <xsl:element name="verb">
            <xsl:text>Create</xsl:text>
          </xsl:element>
          <xsl:element name="FailedCreditCardTxn">
          </xsl:element>
        </out6:retrieveallFailedCreditCardTxnBGInput>
      </out6:retrieveallFailedCreditCardTxnBG>
    </body>
  </xsl:template>

  <!-- This rule represents a type mapping: "body" to "body".  -->
  <xsl:template name="map:XSLTransformation1_req_42">
    <xsl:param name="body"/>
    <out6:retrieveallFailedCreditCardTxnBG>
      <out6:retrieveallFailedCreditCardTxnBGInput>
        <!-- a simple mapping with no associated source:  to "verb"(<string>) -->
        <xsl:element name="verb">
          <xsl:text>Create</xsl:text>
        </xsl:element>
        <xsl:element name="FailedCreditCardTxn">
        </xsl:element>
      </out6:retrieveallFailedCreditCardTxnBGInput>
    </out6:retrieveallFailedCreditCardTxnBG>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
