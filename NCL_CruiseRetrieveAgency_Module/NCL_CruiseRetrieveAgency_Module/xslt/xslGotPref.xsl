<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/xslGotPref.map" md5sum="0e47d46a4261925ce6d894a1cf3016e5" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		xslGotPref.map
*   Map declaration(s):	xslGotPref
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseRetrieveAgency_Module%257DappContext/message%3D%257Bhttp%253A%252F%252FNCL_CruiseRetrieveAgency_Module%252FJDBCOutboundInterface%257DexecuteNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseRetrieveAgency_Module%257DappContext/message%3D%257Bhttp%253A%252F%252FNCL_WESB_Shared_Library%252FNCL_CruiseRetrieveAgency_Interface%257DPerform_NCL_CruiseRetrieveAgencyResponseMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in2="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agc_cont_prfbg"
    xmlns:in="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agc_cont_prfp_cursor"
    xmlns:in3="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_email"
    xmlns:in4="wsdl.http://NCL_CruiseRetrieveAgency_Module/JDBCOutboundInterface"
    xmlns:in5="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_info"
    xmlns:in6="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_emailbg"
    xmlns:in7="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_emailp_cursor"
    xmlns:in8="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_infobg"
    xmlns:in9="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_infop_cursor"
    xmlns:in10="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_phone"
    xmlns:in12="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_phonebg"
    xmlns:in11="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_phonep_cursor"
    xmlns:in13="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_address"
    xmlns:in15="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_addressp_cursor"
    xmlns:in14="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agency_addressbg"
    xmlns:in17="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:in16="http://NCL_CruiseRetrieveAgency_Module/JDBCOutboundInterface"
    xmlns:in18="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/nclseancl_wesb_ar_get_agc_cont_prf"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out="wsdl.http://NCL_WESB_Shared_Library/NCL_CruiseRetrieveAgency_Interface"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io5="http://nclapi/schemas"
    xmlns:io7="http://NCL_CruiseRetrieveAgency_Module"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="http://www.w3.org/2005/08/addressing"
    xmlns:out2="http://NCL_WESB_Shared_Library/NCL_CruiseRetrieveAgency_Interface"
    xmlns:map="http://NCL_CruiseRetrieveAgency_Module/xslt/xslGotPref"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in2 in in3 in4 in5 in6 in7 in8 in9 in10 in12 in11 in13 in15 in14 in17 in16 in18 str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:xslGotPref2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:xslGotPref"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:xslGotPref">
    <io2:smo>
      <context>
        <correlation>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io7:appContext'"/>
          </xsl:attribute>
          <!-- a simple data mapping: "context/correlation/logId"(string) to "logId"(string) -->
          <xsl:if test="context/correlation/logId">
            <xsl:element name="logId">
              <xsl:value-of select="context/correlation/logId"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "context/correlation/errorCode"(string) to "errorCode"(string) -->
          <xsl:if test="context/correlation/errorCode">
            <xsl:element name="errorCode">
              <xsl:value-of select="context/correlation/errorCode"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "context/correlation/errorText"(string) to "errorText"(string) -->
          <xsl:if test="context/correlation/errorText">
            <xsl:element name="errorText">
              <xsl:value-of select="context/correlation/errorText"/>
            </xsl:element>
          </xsl:if>
          <!-- a structural mapping: "context/correlation/io5:NCL_CruiseRetrieveAgencyRQ"(<Anonymous>) to "io5:NCL_CruiseRetrieveAgencyRQ"(<Anonymous>) -->
          <xsl:if test="context/correlation/io5:NCL_CruiseRetrieveAgencyRQ">
            <xsl:copy-of select="context/correlation/io5:NCL_CruiseRetrieveAgencyRQ"/>
          </xsl:if>
          <!-- a structural mapping: "context/correlation/address"(<Anonymous>) to "address"(<Anonymous>) -->
          <xsl:if test="context/correlation/address">
            <xsl:copy-of select="context/correlation/address"/>
          </xsl:if>
          <!-- a structural mapping: "context/correlation/eamil"(<Anonymous>) to "eamil"(<Anonymous>) -->
          <xsl:if test="context/correlation/eamil">
            <xsl:copy-of select="context/correlation/eamil"/>
          </xsl:if>
          <!-- a structural mapping: "context/correlation/info"(<Anonymous>) to "info"(<Anonymous>) -->
          <xsl:if test="context/correlation/info">
            <xsl:copy-of select="context/correlation/info"/>
          </xsl:if>
          <!-- a structural mapping: "context/correlation/phone"(<Anonymous>) to "phone"(<Anonymous>) -->
          <xsl:if test="context/correlation/phone">
            <xsl:copy-of select="context/correlation/phone"/>
          </xsl:if>
          <xsl:element name="pref">
            <xsl:element name="Get_AgencyContactPrefInfo">
              <!-- a for-each transform: "p_cursor"(NclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfP_Cursor) to "P_CURSOR"(<Anonymous>) -->
              <xsl:apply-templates select="body/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGResponse/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGOutput/NclseaNcl_Wesb_Ar_Get_Agc_Cont_Prf/p_cursor" mode="localP_cursorToP_CURSOR_1136203929"/>
            </xsl:element>
          </xsl:element>
        </correlation>
      </context>
      <xsl:element name="body">
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out:Perform_NCL_CruiseRetrieveAgencyResponseMsg'"/>
        </xsl:attribute>
        <xsl:element name="out2:Perform_NCL_CruiseRetrieveAgencyResponse">
          <xsl:element name="io5:NCL_CruiseRetrieveAgencyRS">
            <!-- a simple data mapping: "context/correlation/io5:NCL_CruiseRetrieveAgencyRQ/@TransactionIdentifier"(StringLength1to32) to "TransactionIdentifier"(StringLength1to32) -->
            <xsl:if test="context/correlation/io5:NCL_CruiseRetrieveAgencyRQ/@TransactionIdentifier">
              <xsl:attribute name="TransactionIdentifier">
                <xsl:value-of select="context/correlation/io5:NCL_CruiseRetrieveAgencyRQ/@TransactionIdentifier"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a structural mapping with no associated source:  to "io5:Success"(SuccessType) -->
            <xsl:element name="io5:Success">
            </xsl:element>
            <xsl:element name="io5:AgencyInfo">
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_CODE"(string) to "AgencyClassificationCode"(string) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_CODE">
                <xsl:attribute name="AgencyClassificationCode">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_CODE"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_NAME"(string) to "AgencyClassificationName"(string) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_NAME">
                <xsl:attribute name="AgencyClassificationName">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_NAME"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR/AGENCY_TYPE"(string) to "AgencyType"(string) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR/AGENCY_TYPE">
                <xsl:attribute name="AgencyType">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR/AGENCY_TYPE"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR/ARC_NUMBER"(string) to "ARCNumber"(anySimpleType) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR/ARC_NUMBER">
                <xsl:attribute name="ARCNumber">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR/ARC_NUMBER"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR/CLIA_NUMBER"(string) to "CLIANumber"(anySimpleType) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR/CLIA_NUMBER">
                <xsl:attribute name="CLIANumber">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR/CLIA_NUMBER"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_FINAL"(string) to "FinalDocsDeliveryPref"(string) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_FINAL">
                <xsl:attribute name="FinalDocsDeliveryPref">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_FINAL"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR/IATA_NUMBER"(string) to "IATANumber"(anySimpleType) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR/IATA_NUMBER">
                <xsl:attribute name="IATANumber">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR/IATA_NUMBER"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR/TAXPAYER_NUMBER"(string) to "IdentificationNumber"(StringLength0to32) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR/TAXPAYER_NUMBER">
                <xsl:attribute name="IdentificationNumber">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR/TAXPAYER_NUMBER"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_NAME"(string) to "LegalName"(string) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_NAME">
                <xsl:attribute name="LegalName">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_NAME"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR[1]/OFFICE_CODE"(string) to "OfficeCode"(string) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/OFFICE_CODE">
                <xsl:attribute name="OfficeCode">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/OFFICE_CODE"/>
                </xsl:attribute>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_PREKIT"(string) to "PrekitDocsDeliveryPref"(string) -->
              <xsl:if test="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_PREKIT">
                <xsl:attribute name="PrekitDocsDeliveryPref">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_PREKIT"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:element name="io5:RequestorID">
                <!-- a simple data mapping: "context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_ID"(decimal) to "ID"(StringLength1to32) -->
                <xsl:attribute name="ID">
                  <xsl:value-of select="context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_ID"/>
                </xsl:attribute>
              </xsl:element>
              <!-- a for-each transform: "P_CURSOR"(<Anonymous>) to "io5:Telephone"(TelephoneInfoType) -->
              <xsl:apply-templates select="context/correlation/phone/Get_AgencyPhoneInfo/P_CURSOR" mode="localP_CURSORToTelephone_87039054"/>
              <!-- a for-each transform: "P_CURSOR"(<Anonymous>) to "io5:Address"(<Anonymous>) -->
              <xsl:apply-templates select="context/correlation/address/Get_AgencyAddressInfo/P_CURSOR" mode="localP_CURSORToAddress_1009914824"/>
              <!-- a for-each transform: "P_CURSOR"(<Anonymous>) to "io5:Email"(EmailType) -->
              <xsl:apply-templates select="context/correlation/eamil/Get_AgencyEmailInfo/P_CURSOR" mode="localP_CURSORToEmail_1324968039"/>
              <!-- a for-each transform: "p_cursor"(NclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfP_Cursor) to "io5:ContactPreferences"(<Anonymous>) -->
              <xsl:apply-templates select="body/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGResponse/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGOutput/NclseaNcl_Wesb_Ar_Get_Agc_Cont_Prf/p_cursor" mode="localP_cursorToContactPreferences_1811685672"/>
            </xsl:element>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:xslGotPref2">
    <xsl:param name="smo"/>
    <context>
      <correlation>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io7:appContext'"/>
        </xsl:attribute>
        <!-- a simple data mapping: "$smo/context/correlation/logId"(string) to "logId"(string) -->
        <xsl:if test="$smo/context/correlation/logId">
          <xsl:element name="logId">
            <xsl:value-of select="$smo/context/correlation/logId"/>
          </xsl:element>
        </xsl:if>
        <!-- a simple data mapping: "$smo/context/correlation/errorCode"(string) to "errorCode"(string) -->
        <xsl:if test="$smo/context/correlation/errorCode">
          <xsl:element name="errorCode">
            <xsl:value-of select="$smo/context/correlation/errorCode"/>
          </xsl:element>
        </xsl:if>
        <!-- a simple data mapping: "$smo/context/correlation/errorText"(string) to "errorText"(string) -->
        <xsl:if test="$smo/context/correlation/errorText">
          <xsl:element name="errorText">
            <xsl:value-of select="$smo/context/correlation/errorText"/>
          </xsl:element>
        </xsl:if>
        <!-- a structural mapping: "$smo/context/correlation/io5:NCL_CruiseRetrieveAgencyRQ"(<Anonymous>) to "io5:NCL_CruiseRetrieveAgencyRQ"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/io5:NCL_CruiseRetrieveAgencyRQ">
          <xsl:copy-of select="$smo/context/correlation/io5:NCL_CruiseRetrieveAgencyRQ"/>
        </xsl:if>
        <!-- a structural mapping: "$smo/context/correlation/address"(<Anonymous>) to "address"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/address">
          <xsl:copy-of select="$smo/context/correlation/address"/>
        </xsl:if>
        <!-- a structural mapping: "$smo/context/correlation/eamil"(<Anonymous>) to "eamil"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/eamil">
          <xsl:copy-of select="$smo/context/correlation/eamil"/>
        </xsl:if>
        <!-- a structural mapping: "$smo/context/correlation/info"(<Anonymous>) to "info"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/info">
          <xsl:copy-of select="$smo/context/correlation/info"/>
        </xsl:if>
        <!-- a structural mapping: "$smo/context/correlation/phone"(<Anonymous>) to "phone"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/phone">
          <xsl:copy-of select="$smo/context/correlation/phone"/>
        </xsl:if>
        <xsl:element name="pref">
          <xsl:element name="Get_AgencyContactPrefInfo">
            <!-- a for-each transform: "p_cursor"(NclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfP_Cursor) to "P_CURSOR"(<Anonymous>) -->
            <xsl:apply-templates select="$smo/body/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGResponse/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGOutput/NclseaNcl_Wesb_Ar_Get_Agc_Cont_Prf/p_cursor" mode="localP_cursorToP_CURSOR_1136203929"/>
          </xsl:element>
        </xsl:element>
      </correlation>
    </context>
    <xsl:element name="body">
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:Perform_NCL_CruiseRetrieveAgencyResponseMsg'"/>
      </xsl:attribute>
      <xsl:element name="out2:Perform_NCL_CruiseRetrieveAgencyResponse">
        <xsl:element name="io5:NCL_CruiseRetrieveAgencyRS">
          <!-- a simple data mapping: "$smo/context/correlation/io5:NCL_CruiseRetrieveAgencyRQ/@TransactionIdentifier"(StringLength1to32) to "TransactionIdentifier"(StringLength1to32) -->
          <xsl:if test="$smo/context/correlation/io5:NCL_CruiseRetrieveAgencyRQ/@TransactionIdentifier">
            <xsl:attribute name="TransactionIdentifier">
              <xsl:value-of select="$smo/context/correlation/io5:NCL_CruiseRetrieveAgencyRQ/@TransactionIdentifier"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a structural mapping with no associated source:  to "io5:Success"(SuccessType) -->
          <xsl:element name="io5:Success">
          </xsl:element>
          <xsl:element name="io5:AgencyInfo">
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_CODE"(string) to "AgencyClassificationCode"(string) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_CODE">
              <xsl:attribute name="AgencyClassificationCode">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_CODE"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_NAME"(string) to "AgencyClassificationName"(string) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_NAME">
              <xsl:attribute name="AgencyClassificationName">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_CLASSIFICATION_NAME"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/AGENCY_TYPE"(string) to "AgencyType"(string) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/AGENCY_TYPE">
              <xsl:attribute name="AgencyType">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/AGENCY_TYPE"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/ARC_NUMBER"(string) to "ARCNumber"(anySimpleType) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/ARC_NUMBER">
              <xsl:attribute name="ARCNumber">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/ARC_NUMBER"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/CLIA_NUMBER"(string) to "CLIANumber"(anySimpleType) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/CLIA_NUMBER">
              <xsl:attribute name="CLIANumber">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/CLIA_NUMBER"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_FINAL"(string) to "FinalDocsDeliveryPref"(string) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_FINAL">
              <xsl:attribute name="FinalDocsDeliveryPref">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_FINAL"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/IATA_NUMBER"(string) to "IATANumber"(anySimpleType) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/IATA_NUMBER">
              <xsl:attribute name="IATANumber">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/IATA_NUMBER"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/TAXPAYER_NUMBER"(string) to "IdentificationNumber"(StringLength0to32) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/TAXPAYER_NUMBER">
              <xsl:attribute name="IdentificationNumber">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR/TAXPAYER_NUMBER"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_NAME"(string) to "LegalName"(string) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_NAME">
              <xsl:attribute name="LegalName">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_NAME"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/OFFICE_CODE"(string) to "OfficeCode"(string) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/OFFICE_CODE">
              <xsl:attribute name="OfficeCode">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/OFFICE_CODE"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_PREKIT"(string) to "PrekitDocsDeliveryPref"(string) -->
            <xsl:if test="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_PREKIT">
              <xsl:attribute name="PrekitDocsDeliveryPref">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/DRS_DELIVERY_PREF_PREKIT"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:element name="io5:RequestorID">
              <!-- a simple data mapping: "$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_ID"(decimal) to "ID"(StringLength1to32) -->
              <xsl:attribute name="ID">
                <xsl:value-of select="$smo/context/correlation/info/Get_Agency_Info/P_CURSOR[1]/AGENCY_ID"/>
              </xsl:attribute>
            </xsl:element>
            <!-- a for-each transform: "P_CURSOR"(<Anonymous>) to "io5:Telephone"(TelephoneInfoType) -->
            <xsl:apply-templates select="$smo/context/correlation/phone/Get_AgencyPhoneInfo/P_CURSOR" mode="localP_CURSORToTelephone_87039054"/>
            <!-- a for-each transform: "P_CURSOR"(<Anonymous>) to "io5:Address"(<Anonymous>) -->
            <xsl:apply-templates select="$smo/context/correlation/address/Get_AgencyAddressInfo/P_CURSOR" mode="localP_CURSORToAddress_1009914824"/>
            <!-- a for-each transform: "P_CURSOR"(<Anonymous>) to "io5:Email"(EmailType) -->
            <xsl:apply-templates select="$smo/context/correlation/eamil/Get_AgencyEmailInfo/P_CURSOR" mode="localP_CURSORToEmail_1324968039"/>
            <!-- a for-each transform: "p_cursor"(NclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfP_Cursor) to "io5:ContactPreferences"(<Anonymous>) -->
            <xsl:apply-templates select="$smo/body/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGResponse/in16:executeNclseaNcl_Wesb_Ar_Get_Agc_Cont_PrfBGOutput/NclseaNcl_Wesb_Ar_Get_Agc_Cont_Prf/p_cursor" mode="localP_cursorToContactPreferences_1811685672"/>
          </xsl:element>
        </xsl:element>
      </xsl:element>
    </xsl:element>
  </xsl:template>

  <!-- This rule represents a for-each transform: "p_cursor" to "P_CURSOR".  -->
  <xsl:template match="p_cursor"  mode="localP_cursorToP_CURSOR_1136203929">
    <P_CURSOR>
      <!-- a simple data mapping: "notif_dflt_distr_type"(string) to "NOTIF_DFLT_DISTR_TYPE"(string) -->
      <NOTIF_DFLT_DISTR_TYPE>
        <xsl:value-of select="notif_dflt_distr_type"/>
      </NOTIF_DFLT_DISTR_TYPE>
    </P_CURSOR>
  </xsl:template>

  <!-- This rule represents a for-each transform: "P_CURSOR" to "io5:Telephone".  -->
  <xsl:template match="P_CURSOR"  mode="localP_CURSORToTelephone_87039054">
    <io5:Telephone>
      <!-- a simple data mapping: "PHONE_TYPE"(string) to "PhoneLocationType"(OTA_CodeType) -->
      <xsl:if test="PHONE_TYPE">
        <xsl:attribute name="PhoneLocationType">
          <xsl:value-of select="PHONE_TYPE"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "PHONE_NUMBER"(string) to "PhoneNumber"(StringLength1to32) -->
      <xsl:attribute name="PhoneNumber">
        <xsl:value-of select="PHONE_NUMBER"/>
      </xsl:attribute>
      <!-- a simple data mapping: "IS_PHONE_FAX"(string) to "PhoneTechType"(OTA_CodeType) -->
      <xsl:if test="IS_PHONE_FAX">
        <xsl:attribute name="PhoneTechType">
          <xsl:value-of select="IS_PHONE_FAX"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "IS_PHONE_PRIMARY"(string) to "PhoneUseType"(OTA_CodeType) -->
      <xsl:if test="IS_PHONE_PRIMARY">
        <xsl:attribute name="PhoneUseType">
          <xsl:value-of select="IS_PHONE_PRIMARY"/>
        </xsl:attribute>
      </xsl:if>
    </io5:Telephone>
  </xsl:template>

  <!-- This rule represents a for-each transform: "P_CURSOR" to "io5:Address".  -->
  <xsl:template match="P_CURSOR"  mode="localP_CURSORToAddress_1009914824">
    <io5:Address>
      <!-- a simple data mapping: "IS_ADDRESS_SHIPPING"(string) to "ShareMarketInd"(<NMTOKEN>) -->
      <xsl:if test="IS_ADDRESS_SHIPPING">
        <xsl:attribute name="ShareMarketInd">
          <xsl:value-of select="IS_ADDRESS_SHIPPING"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "IS_ADDRESS_MAILING"(string) to "ShareSynchInd"(<NMTOKEN>) -->
      <xsl:if test="IS_ADDRESS_MAILING">
        <xsl:attribute name="ShareSynchInd">
          <xsl:value-of select="IS_ADDRESS_MAILING"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "ADDRESS_TYPE"(string) to "Type"(OTA_CodeType) -->
      <xsl:if test="ADDRESS_TYPE">
        <xsl:attribute name="Type">
          <xsl:value-of select="ADDRESS_TYPE"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "ADDRESS_LINE1"(string) to "io5:AddressLine"(StringLength1to255) -->
      <xsl:if test="ADDRESS_LINE1">
        <io5:AddressLine>
          <xsl:value-of select="ADDRESS_LINE1"/>
        </io5:AddressLine>
      </xsl:if>
      <!-- a simple data mapping: "ADDRESS_LINE2"(string) to "io5:AddressLine"(StringLength1to255) -->
      <xsl:if test="ADDRESS_LINE2">
        <io5:AddressLine>
          <xsl:value-of select="ADDRESS_LINE2"/>
        </io5:AddressLine>
      </xsl:if>
      <!-- a simple data mapping: "ADDRESS_LINE3"(string) to "io5:AddressLine"(StringLength1to255) -->
      <xsl:if test="ADDRESS_LINE3">
        <io5:AddressLine>
          <xsl:value-of select="ADDRESS_LINE3"/>
        </io5:AddressLine>
      </xsl:if>
      <!-- a simple data mapping: "ADDRESS_LINE4"(string) to "io5:AddressLine"(StringLength1to255) -->
      <xsl:if test="ADDRESS_LINE4">
        <io5:AddressLine>
          <xsl:value-of select="ADDRESS_LINE4"/>
        </io5:AddressLine>
      </xsl:if>
      <!-- a simple data mapping: "ADDRESS_CITY"(string) to "io5:CityName"(StringLength1to64) -->
      <xsl:if test="ADDRESS_CITY">
        <io5:CityName>
          <xsl:value-of select="ADDRESS_CITY"/>
        </io5:CityName>
      </xsl:if>
      <!-- a simple data mapping: "ZIP"(string) to "io5:PostalCode"(StringLength1to16) -->
      <xsl:if test="ZIP">
        <io5:PostalCode>
          <xsl:value-of select="ZIP"/>
        </io5:PostalCode>
      </xsl:if>
      <io5:StateProv>
        <!-- a simple data mapping: "STATE_CODE"(string) to "StateCode"(StateProvCodeType) -->
        <xsl:if test="STATE_CODE">
          <xsl:attribute name="StateCode">
            <xsl:value-of select="STATE_CODE"/>
          </xsl:attribute>
        </xsl:if>
      </io5:StateProv>
      <xsl:element name="io5:CountryName">
        <!-- a simple data mapping: "COUNTRY_CODE"(string) to "Code"(ISO3166) -->
        <xsl:if test="COUNTRY_CODE">
          <xsl:attribute name="Code">
            <xsl:value-of select="COUNTRY_CODE"/>
          </xsl:attribute>
        </xsl:if>
      </xsl:element>
    </io5:Address>
  </xsl:template>

  <!-- This rule represents a for-each transform: "P_CURSOR" to "io5:Email".  -->
  <xsl:template match="P_CURSOR"  mode="localP_CURSORToEmail_1324968039">
    <io5:Email>
      <!-- a simple data mapping: "IS_ADDRESS_MAILING"(string) to "ShareMarketInd"(<NMTOKEN>) -->
      <xsl:if test="IS_ADDRESS_MAILING">
        <xsl:attribute name="ShareMarketInd">
          <xsl:value-of select="IS_ADDRESS_MAILING"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "IS_ADDRESS_SHIPPING"(string) to "ShareSynchInd"(<NMTOKEN>) -->
      <xsl:if test="IS_ADDRESS_SHIPPING">
        <xsl:attribute name="ShareSynchInd">
          <xsl:value-of select="IS_ADDRESS_SHIPPING"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple content mapping -->
      <xsl:value-of select="ADDRESS_LINE1"/>
    </io5:Email>
  </xsl:template>

  <!-- This rule represents a for-each transform: "p_cursor" to "io5:ContactPreferences".  -->
  <xsl:template match="p_cursor"  mode="localP_cursorToContactPreferences_1811685672">
    <io5:ContactPreferences>
      <!-- a simple data mapping: "notif_dflt_distr_type"(string) to "ContactPreference"(StringLength1to64) -->
      <xsl:if test="notif_dflt_distr_type">
        <xsl:attribute name="ContactPreference">
          <xsl:value-of select="notif_dflt_distr_type"/>
        </xsl:attribute>
      </xsl:if>
    </io5:ContactPreferences>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
