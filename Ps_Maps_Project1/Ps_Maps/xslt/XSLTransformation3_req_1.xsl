<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLTransformation3_req_1.map" md5sum="ca766244ffc824d6c5cbbfbcf1aec1ee" version="7.6.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		XSLTransformation3_req_1.map
*   Map declaration(s):	XSLTransformation3_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FPs_Maps%257DAppContext/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FPs_Maps%257DAppContext/xpath%3D%252F/smo.xsd
*   XSLT import(s):   	XSLTransformation3_Contract.xsl, XSLTransformation3_Dept.xsl
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:io="http://Ps_Maps"
    xmlns:io2="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io5="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="http://www.w3.org/2005/08/addressing"
    xmlns:io7="http://tempuri.org/NewPerson.xsd"
    xmlns:map="http://Ps_Maps/xslt/XSLTransformation3_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">

  <!-- imports  -->
  <xsl:import href="XSLTransformation3_Contract.xsl"/>
  <xsl:import href="XSLTransformation3_Dept.xsl"/>
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io3:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLTransformation3_req_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io3:smo" mode="map:XSLTransformation3_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template match="io3:smo"  mode="map:XSLTransformation3_req_1">
    <io3:smo>
      <context>
        <correlation>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io:AppContext'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/correlation/NCL_PS_APPDATA1"(<Anonymous>) to "NCL_PS_APPDATA1"(<Anonymous>) -->
          <xsl:if test="context/correlation/NCL_PS_APPDATA1">
            <xsl:copy-of select="context/correlation/NCL_PS_APPDATA1"/>
          </xsl:if>
          <!-- a simple mapping with no associated source:  to "markerEnd"(string) -->
          <xsl:element name="markerEnd">
            <xsl:text>BBB222BBB</xsl:text>
          </xsl:element>
          <!-- a structural mapping: "context/correlation/NCL_PS_DATA1"(<Anonymous>) to "NCL_PS_DATA1"(<Anonymous>) -->
          <xsl:if test="context/correlation/NCL_PS_DATA1">
            <xsl:copy-of select="context/correlation/NCL_PS_DATA1"/>
          </xsl:if>
          <xsl:element name="io7:NewPerson">
            <xsl:element name="io7:PERSON">
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"(<string>) to "io7:PeopleSoftID"(string) -->
              <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID">
                <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID/@xsi:nil">
                  <xsl:element name="io7:PeopleSoftID">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"(<string>) to "io7:SSN"(string) -->
              <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID">
                <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID/@xsi:nil">
                  <xsl:element name="io7:SSN">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH"(<string>) to "io7:FORENAME"(string) -->
              <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH">
                <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH/@xsi:nil">
                  <xsl:element name="io7:FORENAME">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH"(<string>) to "io7:SURNAME"(string) -->
              <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH">
                <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH/@xsi:nil">
                  <xsl:element name="io7:SURNAME">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/COUNTRY"(<string>) to "io7:COUNTRY_NAME"(string) -->
              <xsl:choose>
                <xsl:when test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/COUNTRY)">
                  <xsl:element name="io7:COUNTRY_NAME">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/COUNTRY"/>
                  </xsl:element>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:element name="io7:COUNTRY_NAME">
                    <xsl:value-of select="'USA'"/>
                  </xsl:element>
                </xsl:otherwise>
              </xsl:choose>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/BIRTHDATE"(string) to "io7:DATE_BIRTH"(string) -->
              <xsl:choose>
                <xsl:when test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/BIRTHDATE)">
                  <xsl:element name="io7:DATE_BIRTH">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/BIRTHDATE"/>
                  </xsl:element>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:element name="io7:DATE_BIRTH">
                    <xsl:value-of select="'1901-01-01'"/>
                  </xsl:element>
                </xsl:otherwise>
              </xsl:choose>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/SEX"(<string>) to "io7:SEX"(string) -->
              <xsl:choose>
                <xsl:when test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/SEX)">
                  <xsl:element name="io7:SEX">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/SEX"/>
                  </xsl:element>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:element name="io7:SEX">
                    <xsl:value-of select="'M'"/>
                  </xsl:element>
                </xsl:otherwise>
              </xsl:choose>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/MAR_STATUS"(<string>) to "io7:MARITAL_STATUS"(string) -->
              <xsl:choose>
                <xsl:when test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/MAR_STATUS)">
                  <xsl:element name="io7:MARITAL_STATUS">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/MAR_STATUS"/>
                  </xsl:element>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:element name="io7:MARITAL_STATUS">
                    <xsl:value-of select="'UNKNOWN'"/>
                  </xsl:element>
                </xsl:otherwise>
              </xsl:choose>
              <!-- a simple mapping with no associated source:  to "io7:HAIR_REASON_ID"(string) -->
              <xsl:element name="io7:HAIR_REASON_ID">
                <xsl:text>UNKNOWN</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "io7:EYE_REASON_ID"(string) -->
              <xsl:element name="io7:EYE_REASON_ID">
                <xsl:text>UNKNOWN</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "io7:PERSON_HEIGHT"(string) -->
              <xsl:element name="io7:PERSON_HEIGHT">
                <xsl:text>UNKNOWN</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "io7:PERSON_WEIGHT"(string) -->
              <xsl:element name="io7:PERSON_WEIGHT">
                <xsl:text>UNKNOWN</xsl:text>
              </xsl:element>
              <!-- a simple mapping with no associated source:  to "io7:COMPANY"(string) -->
              <xsl:element name="io7:COMPANY">
                <xsl:text>AMERICA</xsl:text>
              </xsl:element>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE"(<string>) to "io7:JOBCODE"(string) -->
              <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE">
                <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE/@xsi:nil">
                  <xsl:element name="io7:JOBCODE">
                    <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/DEPTID"(<string>) to "io7:DEPARTMENT"(string) -->
              <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/DEPTID">
                <xsl:element name="io7:DEPARTMENT">
                  <!-- variables for custom code -->
                  <xsl:variable name="DEPTID" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/DEPTID"/>
                  <xsl:call-template name="DEPTIDToDEPARTMENT">
                    <xsl:with-param name="DEPTID" select="$DEPTID"/>
                  </xsl:call-template>
                </xsl:element>
              </xsl:if>
              <!-- a simple mapping with no associated source:  to "io7:CONTRACT"(string) -->
              <xsl:element name="io7:CONTRACT">
                <xsl:call-template name="ToCONTRACT"/>
              </xsl:element>
              <!-- a for-each transform: "NCL_CHECKLIST"(<Anonymous>) to "io7:PERSON_MEDICAL"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="NCL_CHECKLIST" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_CHECKLIST"/>
              <xsl:variable name="NATIONAL_ID" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
              <xsl:variable name="APPLID" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
              <xsl:for-each select="$NCL_CHECKLIST[string-length(./CHKLST_ITEM_CD) &gt; 0]">
                <xsl:call-template name="localNCL_CHECKLIST_et_alToPERSON_MEDICAL_453710544">
                  <xsl:with-param name="NCL_CHECKLIST" select="."/>
                  <xsl:with-param name="NATIONAL_ID" select="$NATIONAL_ID"/>
                  <xsl:with-param name="APPLID" select="$APPLID"/>
                </xsl:call-template>
              </xsl:for-each>
              <!-- a for-each transform: "APPLICNT_PHONE"(<Anonymous>) to "io7:PERSON_PHONE"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="APPLICNT_PHONE1" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLICNT_PHONE"/>
              <xsl:apply-templates select="$APPLICNT_PHONE1[./PHONE_TYPE = &apos;MAIN&apos;]" mode="localAPPLICNT_PHONEToPERSON_PHONE_1508353023"/>
              <!-- a for-each transform: "APPLICNT_PHONE"(<Anonymous>) to "io7:PERSON_PHONE"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="APPLICNT_PHONE3" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLICNT_PHONE"/>
              <xsl:apply-templates select="$APPLICNT_PHONE3[./PHONE_TYPE != &apos;MAIN&apos;]" mode="localAPPLICNT_PHONEToPERSON_PHONE_1673398192"/>
              <!-- a for-each transform: "APP_EMAIL_ADDRS"(<Anonymous>) to "io7:PERSON_EMAIL"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="APP_EMAIL_ADDRS" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APP_EMAIL_ADDRS"/>
              <xsl:apply-templates select="$APP_EMAIL_ADDRS[./E_ADDR_TYPE = &apos;MAIN&apos; and string-length(./EMAIL_ADDR) &gt; 0]" mode="localAPP_EMAIL_ADDRSToPERSON_EMAIL_1498055324"/>
              <xsl:element name="io7:PERSON_NOFKIN">
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"(<string>) to "io7:PeopleSoftID"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID/@xsi:nil">
                    <xsl:element name="io7:PeopleSoftID">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"(<string>) to "io7:SSN"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID/@xsi:nil">
                    <xsl:element name="io7:SSN">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1"(<string>) to "io7:NOFKIN_ADDR1"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1/@xsi:nil">
                    <xsl:element name="io7:NOFKIN_ADDR1">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2"(<string>) to "io7:NOFKIN_ADDR2"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2/@xsi:nil">
                    <xsl:element name="io7:NOFKIN_ADDR2">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY"(<string>) to "io7:City"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY/@xsi:nil">
                    <xsl:element name="io7:City">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE"(<string>) to "io7:STATES"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE/@xsi:nil">
                    <xsl:element name="io7:STATES">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL"(<string>) to "io7:POST_CODE"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL/@xsi:nil">
                    <xsl:element name="io7:POST_CODE">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
                <!-- a simple data mapping: "context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT"(string) to "io7:AIRPORT"(string) -->
                <xsl:if test="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT">
                  <xsl:if test="normalize-space(context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT) or context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT/@xsi:nil">
                    <xsl:element name="io7:AIRPORT">
                      <xsl:value-of select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT"/>
                    </xsl:element>
                  </xsl:if>
                </xsl:if>
              </xsl:element>
              <!-- a for-each transform: "NCL_LICENSE_HNR"(<Anonymous>) to "io7:COMP_PERSON_Languages"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="NCL_LICENSE_HNR" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_LICENSE_HNR"/>
              <xsl:variable name="NATIONAL_ID1" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
              <xsl:variable name="APPLID1" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
              <xsl:for-each select="$NCL_LICENSE_HNR[string-length(./DESCR) &gt; 0 and ./ACCOMP_CATEGORY = &apos;LNG&apos;]">
                <xsl:call-template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_Languages_54869732">
                  <xsl:with-param name="NCL_LICENSE_HNR" select="."/>
                  <xsl:with-param name="NATIONAL_ID1" select="$NATIONAL_ID1"/>
                  <xsl:with-param name="APPLID1" select="$APPLID1"/>
                </xsl:call-template>
              </xsl:for-each>
              <!-- a for-each transform: "NCL_LICENSE_HNR"(<Anonymous>) to "io7:COMP_PERSON_MemberShips"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="NCL_LICENSE_HNR1" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_LICENSE_HNR"/>
              <xsl:variable name="NATIONAL_ID2" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
              <xsl:variable name="APPLID2" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
              <xsl:for-each select="$NCL_LICENSE_HNR[string-length(./DESCR) &gt; 0 and ./ACCOMP_CATEGORY = &apos;MEM&apos;]">
                <xsl:call-template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_MemberShips_151276780">
                  <xsl:with-param name="NCL_LICENSE_HNR1" select="."/>
                  <xsl:with-param name="NATIONAL_ID2" select="$NATIONAL_ID2"/>
                  <xsl:with-param name="APPLID2" select="$APPLID2"/>
                </xsl:call-template>
              </xsl:for-each>
              <!-- a for-each transform: "NCL_LICENSE_HNR"(<Anonymous>) to "io7:COMP_PERSON_LICENSE"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="NCL_LICENSE_HNR2" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_LICENSE_HNR"/>
              <xsl:variable name="NATIONAL_ID3" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
              <xsl:variable name="APPLID3" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
              <xsl:for-each select="$NCL_LICENSE_HNR[string-length(./DESCRSHORT) &gt; 0 and ./ACCOMP_CATEGORY = &apos;MEM&apos;]">
                <xsl:call-template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_LICENSE_1171576529">
                  <xsl:with-param name="NCL_LICENSE_HNR2" select="."/>
                  <xsl:with-param name="NATIONAL_ID3" select="$NATIONAL_ID3"/>
                  <xsl:with-param name="APPLID3" select="$APPLID3"/>
                </xsl:call-template>
              </xsl:for-each>
              <!-- a for-each transform: "APP_CITIZN_PSPT"(<Anonymous>) to "io7:PASSPORT"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="APP_CITIZN_PSPT" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APP_CITIZENSHIP[1]/APP_CITIZN_PSPT"/>
              <xsl:variable name="NATIONAL_ID5" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
              <xsl:variable name="APPLID5" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
              <xsl:for-each select="$APP_CITIZN_PSPT[string-length(./PASSPORT_NBR) &gt; 0]">
                <xsl:call-template name="localAPP_CITIZN_PSPT_et_alToPASSPORT_323264140">
                  <xsl:with-param name="APP_CITIZN_PSPT" select="."/>
                  <xsl:with-param name="NATIONAL_ID5" select="$NATIONAL_ID5"/>
                  <xsl:with-param name="APPLID5" select="$APPLID5"/>
                </xsl:call-template>
              </xsl:for-each>
              <!-- a for-each transform: "APP_VSA_PMT_DTA"(<Anonymous>) to "io7:VISA"(<Anonymous>) -->
              <!-- variables for custom code -->
              <xsl:variable name="APP_VSA_PMT_DTA" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APP_VSA_PMT_DTA"/>
              <xsl:variable name="APPLID6" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
              <xsl:variable name="NATIONAL_ID6" select="context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
              <xsl:for-each select="$APP_VSA_PMT_DTA[string-length(./VISA_WRKPMT_NBR) &gt; 0]">
                <xsl:call-template name="localAPP_VSA_PMT_DTA_et_alToVISA_1642267887">
                  <xsl:with-param name="APP_VSA_PMT_DTA" select="."/>
                  <xsl:with-param name="APPLID6" select="$APPLID6"/>
                  <xsl:with-param name="NATIONAL_ID6" select="$NATIONAL_ID6"/>
                </xsl:call-template>
              </xsl:for-each>
            </xsl:element>
          </xsl:element>
        </correlation>
      </context>
      <!-- a simple mapping with no associated source:  to "body"(string) -->
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'xs4xs:string'"/>
        </xsl:attribute>
        <xsl:text>test1</xsl:text>
      </body>
    </io3:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template name="map:XSLTransformation3_req_12">
    <xsl:param name="smo"/>
    <context>
      <correlation>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io:AppContext'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/correlation/NCL_PS_APPDATA1"(<Anonymous>) to "NCL_PS_APPDATA1"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/NCL_PS_APPDATA1">
          <xsl:copy-of select="$smo/context/correlation/NCL_PS_APPDATA1"/>
        </xsl:if>
        <!-- a simple mapping with no associated source:  to "markerEnd"(string) -->
        <xsl:element name="markerEnd">
          <xsl:text>BBB222BBB</xsl:text>
        </xsl:element>
        <!-- a structural mapping: "$smo/context/correlation/NCL_PS_DATA1"(<Anonymous>) to "NCL_PS_DATA1"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/NCL_PS_DATA1">
          <xsl:copy-of select="$smo/context/correlation/NCL_PS_DATA1"/>
        </xsl:if>
        <xsl:element name="io7:NewPerson">
          <xsl:element name="io7:PERSON">
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"(<string>) to "io7:PeopleSoftID"(string) -->
            <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID">
              <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID/@xsi:nil">
                <xsl:element name="io7:PeopleSoftID">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
                </xsl:element>
              </xsl:if>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"(<string>) to "io7:SSN"(string) -->
            <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID">
              <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID/@xsi:nil">
                <xsl:element name="io7:SSN">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
                </xsl:element>
              </xsl:if>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH"(<string>) to "io7:FORENAME"(string) -->
            <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH">
              <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH/@xsi:nil">
                <xsl:element name="io7:FORENAME">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/FIRST_NAME_SRCH"/>
                </xsl:element>
              </xsl:if>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH"(<string>) to "io7:SURNAME"(string) -->
            <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH">
              <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH/@xsi:nil">
                <xsl:element name="io7:SURNAME">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/LAST_NAME_SRCH"/>
                </xsl:element>
              </xsl:if>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/COUNTRY"(<string>) to "io7:COUNTRY_NAME"(string) -->
            <xsl:choose>
              <xsl:when test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/COUNTRY)">
                <xsl:element name="io7:COUNTRY_NAME">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/COUNTRY"/>
                </xsl:element>
              </xsl:when>
              <xsl:otherwise>
                <xsl:element name="io7:COUNTRY_NAME">
                  <xsl:value-of select="'USA'"/>
                </xsl:element>
              </xsl:otherwise>
            </xsl:choose>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/BIRTHDATE"(string) to "io7:DATE_BIRTH"(string) -->
            <xsl:choose>
              <xsl:when test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/BIRTHDATE)">
                <xsl:element name="io7:DATE_BIRTH">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/BIRTHDATE"/>
                </xsl:element>
              </xsl:when>
              <xsl:otherwise>
                <xsl:element name="io7:DATE_BIRTH">
                  <xsl:value-of select="'1901-01-01'"/>
                </xsl:element>
              </xsl:otherwise>
            </xsl:choose>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/SEX"(<string>) to "io7:SEX"(string) -->
            <xsl:choose>
              <xsl:when test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/SEX)">
                <xsl:element name="io7:SEX">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/SEX"/>
                </xsl:element>
              </xsl:when>
              <xsl:otherwise>
                <xsl:element name="io7:SEX">
                  <xsl:value-of select="'M'"/>
                </xsl:element>
              </xsl:otherwise>
            </xsl:choose>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/MAR_STATUS"(<string>) to "io7:MARITAL_STATUS"(string) -->
            <xsl:choose>
              <xsl:when test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/MAR_STATUS)">
                <xsl:element name="io7:MARITAL_STATUS">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT[1]/MAR_STATUS"/>
                </xsl:element>
              </xsl:when>
              <xsl:otherwise>
                <xsl:element name="io7:MARITAL_STATUS">
                  <xsl:value-of select="'UNKNOWN'"/>
                </xsl:element>
              </xsl:otherwise>
            </xsl:choose>
            <!-- a simple mapping with no associated source:  to "io7:HAIR_REASON_ID"(string) -->
            <xsl:element name="io7:HAIR_REASON_ID">
              <xsl:text>UNKNOWN</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "io7:EYE_REASON_ID"(string) -->
            <xsl:element name="io7:EYE_REASON_ID">
              <xsl:text>UNKNOWN</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "io7:PERSON_HEIGHT"(string) -->
            <xsl:element name="io7:PERSON_HEIGHT">
              <xsl:text>UNKNOWN</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "io7:PERSON_WEIGHT"(string) -->
            <xsl:element name="io7:PERSON_WEIGHT">
              <xsl:text>UNKNOWN</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "io7:COMPANY"(string) -->
            <xsl:element name="io7:COMPANY">
              <xsl:text>AMERICA</xsl:text>
            </xsl:element>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE"(<string>) to "io7:JOBCODE"(string) -->
            <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE">
              <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE/@xsi:nil">
                <xsl:element name="io7:JOBCODE">
                  <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/JOBCODE"/>
                </xsl:element>
              </xsl:if>
            </xsl:if>
            <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/DEPTID"(<string>) to "io7:DEPARTMENT"(string) -->
            <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/DEPTID">
              <xsl:element name="io7:DEPARTMENT">
                <!-- variables for custom code -->
                <xsl:variable name="DEPTID" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_JOB_REQ_WRK/DEPTID"/>
                <xsl:call-template name="DEPTIDToDEPARTMENT">
                  <xsl:with-param name="DEPTID" select="$DEPTID"/>
                </xsl:call-template>
              </xsl:element>
            </xsl:if>
            <!-- a simple mapping with no associated source:  to "io7:CONTRACT"(string) -->
            <xsl:element name="io7:CONTRACT">
              <xsl:call-template name="ToCONTRACT"/>
            </xsl:element>
            <!-- a for-each transform: "NCL_CHECKLIST"(<Anonymous>) to "io7:PERSON_MEDICAL"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="NCL_CHECKLIST" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_CHECKLIST"/>
            <xsl:variable name="NATIONAL_ID" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
            <xsl:variable name="APPLID" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
            <xsl:for-each select="$NCL_CHECKLIST[string-length(./CHKLST_ITEM_CD) &gt; 0]">
              <xsl:call-template name="localNCL_CHECKLIST_et_alToPERSON_MEDICAL_453710544">
                <xsl:with-param name="NCL_CHECKLIST" select="."/>
                <xsl:with-param name="NATIONAL_ID" select="$NATIONAL_ID"/>
                <xsl:with-param name="APPLID" select="$APPLID"/>
              </xsl:call-template>
            </xsl:for-each>
            <!-- a for-each transform: "APPLICNT_PHONE"(<Anonymous>) to "io7:PERSON_PHONE"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="APPLICNT_PHONE1" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLICNT_PHONE"/>
            <xsl:apply-templates select="$APPLICNT_PHONE1[./PHONE_TYPE = &apos;MAIN&apos;]" mode="localAPPLICNT_PHONEToPERSON_PHONE_1508353023"/>
            <!-- a for-each transform: "APPLICNT_PHONE"(<Anonymous>) to "io7:PERSON_PHONE"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="APPLICNT_PHONE3" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLICNT_PHONE"/>
            <xsl:apply-templates select="$APPLICNT_PHONE3[./PHONE_TYPE != &apos;MAIN&apos;]" mode="localAPPLICNT_PHONEToPERSON_PHONE_1673398192"/>
            <!-- a for-each transform: "APP_EMAIL_ADDRS"(<Anonymous>) to "io7:PERSON_EMAIL"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="APP_EMAIL_ADDRS" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APP_EMAIL_ADDRS"/>
            <xsl:apply-templates select="$APP_EMAIL_ADDRS[./E_ADDR_TYPE = &apos;MAIN&apos; and string-length(./EMAIL_ADDR) &gt; 0]" mode="localAPP_EMAIL_ADDRSToPERSON_EMAIL_1498055324"/>
            <xsl:element name="io7:PERSON_NOFKIN">
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"(<string>) to "io7:PeopleSoftID"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID/@xsi:nil">
                  <xsl:element name="io7:PeopleSoftID">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"(<string>) to "io7:SSN"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID/@xsi:nil">
                  <xsl:element name="io7:SSN">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1"(<string>) to "io7:NOFKIN_ADDR1"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1/@xsi:nil">
                  <xsl:element name="io7:NOFKIN_ADDR1">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS1"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2"(<string>) to "io7:NOFKIN_ADDR2"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2/@xsi:nil">
                  <xsl:element name="io7:NOFKIN_ADDR2">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/ADDRESS2"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY"(<string>) to "io7:City"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY/@xsi:nil">
                  <xsl:element name="io7:City">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/CITY"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE"(<string>) to "io7:STATES"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE/@xsi:nil">
                  <xsl:element name="io7:STATES">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/STATE"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL"(<string>) to "io7:POST_CODE"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL/@xsi:nil">
                  <xsl:element name="io7:POST_CODE">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/POSTAL"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
              <!-- a simple data mapping: "$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT"(string) to "io7:AIRPORT"(string) -->
              <xsl:if test="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT">
                <xsl:if test="normalize-space($smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT) or $smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT/@xsi:nil">
                  <xsl:element name="io7:AIRPORT">
                    <xsl:value-of select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPL_DATA_EFFDT/NCL_AIRPORT"/>
                  </xsl:element>
                </xsl:if>
              </xsl:if>
            </xsl:element>
            <!-- a for-each transform: "NCL_LICENSE_HNR"(<Anonymous>) to "io7:COMP_PERSON_Languages"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="NCL_LICENSE_HNR" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_LICENSE_HNR"/>
            <xsl:variable name="NATIONAL_ID1" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
            <xsl:variable name="APPLID1" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
            <xsl:for-each select="$NCL_LICENSE_HNR[string-length(./DESCR) &gt; 0 and ./ACCOMP_CATEGORY = &apos;LNG&apos;]">
              <xsl:call-template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_Languages_54869732">
                <xsl:with-param name="NCL_LICENSE_HNR" select="."/>
                <xsl:with-param name="NATIONAL_ID1" select="$NATIONAL_ID1"/>
                <xsl:with-param name="APPLID1" select="$APPLID1"/>
              </xsl:call-template>
            </xsl:for-each>
            <!-- a for-each transform: "NCL_LICENSE_HNR"(<Anonymous>) to "io7:COMP_PERSON_MemberShips"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="NCL_LICENSE_HNR1" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_LICENSE_HNR"/>
            <xsl:variable name="NATIONAL_ID2" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
            <xsl:variable name="APPLID2" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
            <xsl:for-each select="$NCL_LICENSE_HNR[string-length(./DESCR) &gt; 0 and ./ACCOMP_CATEGORY = &apos;MEM&apos;]">
              <xsl:call-template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_MemberShips_151276780">
                <xsl:with-param name="NCL_LICENSE_HNR1" select="."/>
                <xsl:with-param name="NATIONAL_ID2" select="$NATIONAL_ID2"/>
                <xsl:with-param name="APPLID2" select="$APPLID2"/>
              </xsl:call-template>
            </xsl:for-each>
            <!-- a for-each transform: "NCL_LICENSE_HNR"(<Anonymous>) to "io7:COMP_PERSON_LICENSE"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="NCL_LICENSE_HNR2" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_LICENSE_HNR"/>
            <xsl:variable name="NATIONAL_ID3" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
            <xsl:variable name="APPLID3" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
            <xsl:for-each select="$NCL_LICENSE_HNR[string-length(./DESCRSHORT) &gt; 0 and ./ACCOMP_CATEGORY = &apos;MEM&apos;]">
              <xsl:call-template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_LICENSE_1171576529">
                <xsl:with-param name="NCL_LICENSE_HNR2" select="."/>
                <xsl:with-param name="NATIONAL_ID3" select="$NATIONAL_ID3"/>
                <xsl:with-param name="APPLID3" select="$APPLID3"/>
              </xsl:call-template>
            </xsl:for-each>
            <!-- a for-each transform: "APP_CITIZN_PSPT"(<Anonymous>) to "io7:PASSPORT"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="APP_CITIZN_PSPT" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APP_CITIZENSHIP[1]/APP_CITIZN_PSPT"/>
            <xsl:variable name="NATIONAL_ID5" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
            <xsl:variable name="APPLID5" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
            <xsl:for-each select="$APP_CITIZN_PSPT[string-length(./PASSPORT_NBR) &gt; 0]">
              <xsl:call-template name="localAPP_CITIZN_PSPT_et_alToPASSPORT_323264140">
                <xsl:with-param name="APP_CITIZN_PSPT" select="."/>
                <xsl:with-param name="NATIONAL_ID5" select="$NATIONAL_ID5"/>
                <xsl:with-param name="APPLID5" select="$APPLID5"/>
              </xsl:call-template>
            </xsl:for-each>
            <!-- a for-each transform: "APP_VSA_PMT_DTA"(<Anonymous>) to "io7:VISA"(<Anonymous>) -->
            <!-- variables for custom code -->
            <xsl:variable name="APP_VSA_PMT_DTA" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APP_VSA_PMT_DTA"/>
            <xsl:variable name="APPLID6" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/APPLID"/>
            <xsl:variable name="NATIONAL_ID6" select="$smo/context/correlation/NCL_PS_DATA1/MsgData/Transaction/APPLICANT/NCL_APPL_NID/NATIONAL_ID"/>
            <xsl:for-each select="$APP_VSA_PMT_DTA[string-length(./VISA_WRKPMT_NBR) &gt; 0]">
              <xsl:call-template name="localAPP_VSA_PMT_DTA_et_alToVISA_1642267887">
                <xsl:with-param name="APP_VSA_PMT_DTA" select="."/>
                <xsl:with-param name="APPLID6" select="$APPLID6"/>
                <xsl:with-param name="NATIONAL_ID6" select="$NATIONAL_ID6"/>
              </xsl:call-template>
            </xsl:for-each>
          </xsl:element>
        </xsl:element>
      </correlation>
    </context>
    <!-- a simple mapping with no associated source:  to "body"(string) -->
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'xs4xs:string'"/>
      </xsl:attribute>
      <xsl:text>test1</xsl:text>
    </body>
  </xsl:template>

  <!-- This rule represents a for-each transform: "NCL_CHECKLIST" to "io7:PERSON_MEDICAL".  -->
  <xsl:template name="localNCL_CHECKLIST_et_alToPERSON_MEDICAL_453710544">
    <xsl:param name="NCL_CHECKLIST"/>
    <xsl:param name="NATIONAL_ID"/>
    <xsl:param name="APPLID"/>
    <io7:PERSON_MEDICAL>
      <!-- a simple data mapping: "$APPLID"(<string>) to "io7:PeopleSoftID"(string) -->
      <xsl:if test="$APPLID">
        <xsl:if test="normalize-space($APPLID/.) or $APPLID/./@xsi:nil">
          <io7:PeopleSoftID>
            <xsl:value-of select="$APPLID/."/>
          </io7:PeopleSoftID>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NATIONAL_ID"(<string>) to "io7:SSN"(string) -->
      <xsl:if test="$NATIONAL_ID">
        <xsl:if test="normalize-space($NATIONAL_ID/.) or $NATIONAL_ID/./@xsi:nil">
          <io7:SSN>
            <xsl:value-of select="$NATIONAL_ID/."/>
          </io7:SSN>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_CHECKLIST/STATUS_DT"(string) to "io7:MED_STATUS_DT"(string) -->
      <xsl:if test="$NCL_CHECKLIST/STATUS_DT">
        <xsl:if test="normalize-space($NCL_CHECKLIST/STATUS_DT) or $NCL_CHECKLIST/STATUS_DT/@xsi:nil">
          <io7:MED_STATUS_DT>
            <xsl:value-of select="$NCL_CHECKLIST/STATUS_DT"/>
          </io7:MED_STATUS_DT>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_CHECKLIST/CHKLST_ITEM_CD"(<string>) to "io7:MED_CHKLST_ITEM_CD"(string) -->
      <xsl:if test="$NCL_CHECKLIST/CHKLST_ITEM_CD">
        <xsl:if test="normalize-space($NCL_CHECKLIST/CHKLST_ITEM_CD) or $NCL_CHECKLIST/CHKLST_ITEM_CD/@xsi:nil">
          <io7:MED_CHKLST_ITEM_CD>
            <xsl:value-of select="$NCL_CHECKLIST/CHKLST_ITEM_CD"/>
          </io7:MED_CHKLST_ITEM_CD>
        </xsl:if>
      </xsl:if>
    </io7:PERSON_MEDICAL>
  </xsl:template>

  <!-- This rule represents a for-each transform: "APPLICNT_PHONE" to "io7:PERSON_PHONE".  -->
  <xsl:template match="APPLICNT_PHONE"  mode="localAPPLICNT_PHONEToPERSON_PHONE_1508353023">
    <io7:PERSON_PHONE>
      <!-- a simple data mapping: "PHONE"(<string>) to "io7:TELEPHONE_1"(string) -->
      <xsl:if test="PHONE">
        <xsl:if test="normalize-space(PHONE) or PHONE/@xsi:nil">
          <io7:TELEPHONE_1>
            <xsl:value-of select="PHONE"/>
          </io7:TELEPHONE_1>
        </xsl:if>
      </xsl:if>
    </io7:PERSON_PHONE>
  </xsl:template>

  <!-- This rule represents a for-each transform: "APPLICNT_PHONE" to "io7:PERSON_PHONE".  -->
  <xsl:template match="APPLICNT_PHONE"  mode="localAPPLICNT_PHONEToPERSON_PHONE_1673398192">
    <io7:PERSON_PHONE>
      <!-- a simple data mapping: "PHONE"(<string>) to "io7:TELEPHONE_1"(string) -->
      <xsl:if test="PHONE">
        <xsl:if test="normalize-space(PHONE) or PHONE/@xsi:nil">
          <io7:TELEPHONE_1>
            <xsl:value-of select="PHONE"/>
          </io7:TELEPHONE_1>
        </xsl:if>
      </xsl:if>
    </io7:PERSON_PHONE>
  </xsl:template>

  <!-- This rule represents a for-each transform: "APP_EMAIL_ADDRS" to "io7:PERSON_EMAIL".  -->
  <xsl:template match="APP_EMAIL_ADDRS"  mode="localAPP_EMAIL_ADDRSToPERSON_EMAIL_1498055324">
    <io7:PERSON_EMAIL>
      <!-- a simple data mapping: "EMAIL_ADDR"(<string>) to "io7:E_MAIL_ADDRESS_1"(string) -->
      <xsl:if test="EMAIL_ADDR">
        <xsl:if test="normalize-space(EMAIL_ADDR) or EMAIL_ADDR/@xsi:nil">
          <io7:E_MAIL_ADDRESS_1>
            <xsl:value-of select="EMAIL_ADDR"/>
          </io7:E_MAIL_ADDRESS_1>
        </xsl:if>
      </xsl:if>
    </io7:PERSON_EMAIL>
  </xsl:template>

  <!-- This rule represents a for-each transform: "NCL_LICENSE_HNR" to "io7:COMP_PERSON_Languages".  -->
  <xsl:template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_Languages_54869732">
    <xsl:param name="NCL_LICENSE_HNR"/>
    <xsl:param name="NATIONAL_ID1"/>
    <xsl:param name="APPLID1"/>
    <io7:COMP_PERSON_Languages>
      <!-- a simple data mapping: "$APPLID1"(<string>) to "io7:PeopleSoftID"(string) -->
      <xsl:if test="$APPLID1">
        <xsl:if test="normalize-space($APPLID1/.) or $APPLID1/./@xsi:nil">
          <io7:PeopleSoftID>
            <xsl:value-of select="$APPLID1/."/>
          </io7:PeopleSoftID>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NATIONAL_ID1"(<string>) to "io7:SSN"(string) -->
      <xsl:if test="$NATIONAL_ID1">
        <xsl:if test="normalize-space($NATIONAL_ID1/.) or $NATIONAL_ID1/./@xsi:nil">
          <io7:SSN>
            <xsl:value-of select="$NATIONAL_ID1/."/>
          </io7:SSN>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR/DESCR"(<string>) to "io7:Name"(string) -->
      <xsl:if test="$NCL_LICENSE_HNR/DESCR">
        <xsl:if test="normalize-space($NCL_LICENSE_HNR/DESCR) or $NCL_LICENSE_HNR/DESCR/@xsi:nil">
          <io7:Name>
            <xsl:value-of select="$NCL_LICENSE_HNR/DESCR"/>
          </io7:Name>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR/EVALUATION_DT"(string) to "io7:valid_from_date"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($NCL_LICENSE_HNR/EVALUATION_DT)">
          <io7:valid_from_date>
            <xsl:value-of select="$NCL_LICENSE_HNR/EVALUATION_DT"/>
          </io7:valid_from_date>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:valid_from_date">
            <xsl:value-of select="'1900-01-01'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR/EXPIRATN_DT"(string) to "io7:valid_to_date"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($NCL_LICENSE_HNR/EXPIRATN_DT)">
          <io7:valid_to_date>
            <xsl:value-of select="$NCL_LICENSE_HNR/EXPIRATN_DT"/>
          </io7:valid_to_date>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:valid_to_date">
            <xsl:value-of select="'9999-12-31'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple mapping with no associated source:  to "io7:Obtain_From"(string) -->
      <io7:Obtain_From>
        <xsl:text>COURSE EVENT</xsl:text>
      </io7:Obtain_From>
      <!-- a simple mapping with no associated source:  to "io7:DESCRIPTION"(string) -->
      <io7:DESCRIPTION>
        <xsl:text>1</xsl:text>
      </io7:DESCRIPTION>
    </io7:COMP_PERSON_Languages>
  </xsl:template>

  <!-- This rule represents a for-each transform: "NCL_LICENSE_HNR" to "io7:COMP_PERSON_MemberShips".  -->
  <xsl:template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_MemberShips_151276780">
    <xsl:param name="NCL_LICENSE_HNR1"/>
    <xsl:param name="NATIONAL_ID2"/>
    <xsl:param name="APPLID2"/>
    <io7:COMP_PERSON_MemberShips>
      <!-- a simple data mapping: "$APPLID2"(<string>) to "io7:PeopleSoftID"(string) -->
      <xsl:if test="$APPLID2">
        <xsl:if test="normalize-space($APPLID2/.) or $APPLID2/./@xsi:nil">
          <io7:PeopleSoftID>
            <xsl:value-of select="$APPLID2/."/>
          </io7:PeopleSoftID>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NATIONAL_ID2"(<string>) to "io7:SSN"(string) -->
      <xsl:if test="$NATIONAL_ID2">
        <xsl:if test="normalize-space($NATIONAL_ID2/.) or $NATIONAL_ID2/./@xsi:nil">
          <io7:SSN>
            <xsl:value-of select="$NATIONAL_ID2/."/>
          </io7:SSN>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR1/DESCR"(<string>) to "io7:Name"(string) -->
      <xsl:if test="$NCL_LICENSE_HNR1/DESCR">
        <xsl:if test="normalize-space($NCL_LICENSE_HNR1/DESCR) or $NCL_LICENSE_HNR1/DESCR/@xsi:nil">
          <io7:Name>
            <xsl:value-of select="$NCL_LICENSE_HNR1/DESCR"/>
          </io7:Name>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR1/ACCOMPLISHMENT"(<string>) to "io7:Certificate_number"(string) -->
      <xsl:if test="$NCL_LICENSE_HNR1/ACCOMPLISHMENT">
        <xsl:if test="normalize-space($NCL_LICENSE_HNR1/ACCOMPLISHMENT) or $NCL_LICENSE_HNR1/ACCOMPLISHMENT/@xsi:nil">
          <io7:Certificate_number>
            <xsl:value-of select="$NCL_LICENSE_HNR1/ACCOMPLISHMENT"/>
          </io7:Certificate_number>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR1/DT_ISSUED"(string) to "io7:valid_from_date"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($NCL_LICENSE_HNR1/DT_ISSUED)">
          <io7:valid_from_date>
            <xsl:value-of select="$NCL_LICENSE_HNR1/DT_ISSUED"/>
          </io7:valid_from_date>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:valid_from_date">
            <xsl:value-of select="'1900-0-01'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR1/EXPIRATN_DT"(string) to "io7:valid_to_date"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($NCL_LICENSE_HNR1/EXPIRATN_DT)">
          <io7:valid_to_date>
            <xsl:value-of select="$NCL_LICENSE_HNR1/EXPIRATN_DT"/>
          </io7:valid_to_date>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:valid_to_date">
            <xsl:value-of select="'9999-12-31'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple mapping with no associated source:  to "io7:Obtain_From"(string) -->
      <io7:Obtain_From>
        <xsl:text>COURSE EVENT</xsl:text>
      </io7:Obtain_From>
      <!-- a simple mapping with no associated source:  to "io7:DESCRIPTION"(string) -->
      <io7:DESCRIPTION>
        <xsl:text>1</xsl:text>
      </io7:DESCRIPTION>
    </io7:COMP_PERSON_MemberShips>
  </xsl:template>

  <!-- This rule represents a for-each transform: "NCL_LICENSE_HNR" to "io7:COMP_PERSON_LICENSE".  -->
  <xsl:template name="localNCL_LICENSE_HNR_et_alToCOMP_PERSON_LICENSE_1171576529">
    <xsl:param name="NCL_LICENSE_HNR2"/>
    <xsl:param name="NATIONAL_ID3"/>
    <xsl:param name="APPLID3"/>
    <io7:COMP_PERSON_LICENSE>
      <!-- a simple data mapping: "$APPLID3"(<string>) to "io7:PeopleSoftID"(string) -->
      <xsl:if test="$APPLID3">
        <xsl:if test="normalize-space($APPLID3/.) or $APPLID3/./@xsi:nil">
          <io7:PeopleSoftID>
            <xsl:value-of select="$APPLID3/."/>
          </io7:PeopleSoftID>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NATIONAL_ID3"(<string>) to "io7:SSN"(string) -->
      <xsl:if test="$NATIONAL_ID3">
        <xsl:if test="normalize-space($NATIONAL_ID3/.) or $NATIONAL_ID3/./@xsi:nil">
          <io7:SSN>
            <xsl:value-of select="$NATIONAL_ID3/."/>
          </io7:SSN>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR2/DESCRSHORT"(<string>) to "io7:Name"(string) -->
      <xsl:if test="$NCL_LICENSE_HNR2/DESCRSHORT">
        <xsl:if test="normalize-space($NCL_LICENSE_HNR2/DESCRSHORT) or $NCL_LICENSE_HNR2/DESCRSHORT/@xsi:nil">
          <io7:Name>
            <xsl:value-of select="$NCL_LICENSE_HNR2/DESCRSHORT"/>
          </io7:Name>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR2/LICENSE_NBR"(<string>) to "io7:Certificate_number"(string) -->
      <xsl:if test="$NCL_LICENSE_HNR2/LICENSE_NBR">
        <xsl:if test="normalize-space($NCL_LICENSE_HNR2/LICENSE_NBR) or $NCL_LICENSE_HNR2/LICENSE_NBR/@xsi:nil">
          <io7:Certificate_number>
            <xsl:value-of select="$NCL_LICENSE_HNR2/LICENSE_NBR"/>
          </io7:Certificate_number>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR2/DT_ISSUED"(string) to "io7:valid_from_date"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($NCL_LICENSE_HNR2/DT_ISSUED)">
          <io7:valid_from_date>
            <xsl:value-of select="$NCL_LICENSE_HNR2/DT_ISSUED"/>
          </io7:valid_from_date>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:valid_from_date">
            <xsl:value-of select="'1900-01-01'
"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$NCL_LICENSE_HNR2/EXPIRATN_DT"(string) to "io7:valid_to_date"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($NCL_LICENSE_HNR2/EXPIRATN_DT)">
          <io7:valid_to_date>
            <xsl:value-of select="$NCL_LICENSE_HNR2/EXPIRATN_DT"/>
          </io7:valid_to_date>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:valid_to_date">
            <xsl:value-of select="'9999-12-31'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple mapping with no associated source:  to "io7:Obtain_From"(string) -->
      <io7:Obtain_From>
        <xsl:text>COURSE EVENT</xsl:text>
      </io7:Obtain_From>
      <!-- a simple mapping with no associated source:  to "io7:DESCRIPTION"(string) -->
      <io7:DESCRIPTION>
        <xsl:text>1</xsl:text>
      </io7:DESCRIPTION>
    </io7:COMP_PERSON_LICENSE>
  </xsl:template>

  <!-- This rule represents a for-each transform: "APP_CITIZN_PSPT" to "io7:PASSPORT".  -->
  <xsl:template name="localAPP_CITIZN_PSPT_et_alToPASSPORT_323264140">
    <xsl:param name="APP_CITIZN_PSPT"/>
    <xsl:param name="NATIONAL_ID5"/>
    <xsl:param name="APPLID5"/>
    <io7:PASSPORT>
      <!-- a simple data mapping: "$APPLID5"(<string>) to "io7:PeopleSoftID"(string) -->
      <xsl:if test="$APPLID5">
        <xsl:if test="normalize-space($APPLID5/.) or $APPLID5/./@xsi:nil">
          <io7:PeopleSoftID>
            <xsl:value-of select="$APPLID5/."/>
          </io7:PeopleSoftID>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NATIONAL_ID5"(<string>) to "io7:SSN"(string) -->
      <xsl:if test="$NATIONAL_ID5">
        <xsl:if test="normalize-space($NATIONAL_ID5/.) or $NATIONAL_ID5/./@xsi:nil">
          <io7:SSN>
            <xsl:value-of select="$NATIONAL_ID5/."/>
          </io7:SSN>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$APP_CITIZN_PSPT/COUNTRY"(<string>) to "io7:THREE_DIGIT_ABBR"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($APP_CITIZN_PSPT/COUNTRY)">
          <io7:THREE_DIGIT_ABBR>
            <xsl:value-of select="$APP_CITIZN_PSPT/COUNTRY"/>
          </io7:THREE_DIGIT_ABBR>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:THREE_DIGIT_ABBR">
            <xsl:value-of select="'USA'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$APP_CITIZN_PSPT/PASSPORT_NBR"(<string>) to "io7:PASSPORT_NUMBER"(string) -->
      <xsl:if test="$APP_CITIZN_PSPT/PASSPORT_NBR">
        <xsl:if test="normalize-space($APP_CITIZN_PSPT/PASSPORT_NBR) or $APP_CITIZN_PSPT/PASSPORT_NBR/@xsi:nil">
          <io7:PASSPORT_NUMBER>
            <xsl:value-of select="$APP_CITIZN_PSPT/PASSPORT_NBR"/>
          </io7:PASSPORT_NUMBER>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$APP_CITIZN_PSPT/DT_ISSUED"(string) to "io7:VALID_FROM_DATE"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($APP_CITIZN_PSPT/DT_ISSUED)">
          <io7:VALID_FROM_DATE>
            <xsl:value-of select="$APP_CITIZN_PSPT/DT_ISSUED"/>
          </io7:VALID_FROM_DATE>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:VALID_FROM_DATE">
            <xsl:value-of select="'1900-01-01'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$APP_CITIZN_PSPT/EXPIRATN_DT"(string) to "io7:PASSPORT_EXPIRY_DATE"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($APP_CITIZN_PSPT/EXPIRATN_DT)">
          <io7:PASSPORT_EXPIRY_DATE>
            <xsl:value-of select="$APP_CITIZN_PSPT/EXPIRATN_DT"/>
          </io7:PASSPORT_EXPIRY_DATE>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:PASSPORT_EXPIRY_DATE">
            <xsl:value-of select="'9999-12-31'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$APP_CITIZN_PSPT/ISSUING_AUTHORITY"(<string>) to "io7:ISSUING_OFFICE"(string) -->
      <xsl:if test="$APP_CITIZN_PSPT/ISSUING_AUTHORITY">
        <xsl:if test="normalize-space($APP_CITIZN_PSPT/ISSUING_AUTHORITY) or $APP_CITIZN_PSPT/ISSUING_AUTHORITY/@xsi:nil">
          <io7:ISSUING_OFFICE>
            <xsl:value-of select="$APP_CITIZN_PSPT/ISSUING_AUTHORITY"/>
          </io7:ISSUING_OFFICE>
        </xsl:if>
      </xsl:if>
    </io7:PASSPORT>
  </xsl:template>

  <!-- This rule represents a for-each transform: "APP_VSA_PMT_DTA" to "io7:VISA".  -->
  <xsl:template name="localAPP_VSA_PMT_DTA_et_alToVISA_1642267887">
    <xsl:param name="APP_VSA_PMT_DTA"/>
    <xsl:param name="APPLID6"/>
    <xsl:param name="NATIONAL_ID6"/>
    <io7:VISA>
      <!-- a simple data mapping: "$APPLID6"(<string>) to "io7:PeopleSoftID"(string) -->
      <xsl:if test="$APPLID6">
        <xsl:if test="normalize-space($APPLID6/.) or $APPLID6/./@xsi:nil">
          <io7:PeopleSoftID>
            <xsl:value-of select="$APPLID6/."/>
          </io7:PeopleSoftID>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$NATIONAL_ID6"(<string>) to "io7:SSN"(string) -->
      <xsl:if test="$NATIONAL_ID6">
        <xsl:if test="normalize-space($NATIONAL_ID6/.) or $NATIONAL_ID6/./@xsi:nil">
          <io7:SSN>
            <xsl:value-of select="$NATIONAL_ID6/."/>
          </io7:SSN>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$APP_VSA_PMT_DTA/COUNTRY"(<string>) to "io7:THREE_DIGIT_ABBR"(string) -->
      <xsl:if test="$APP_VSA_PMT_DTA/COUNTRY">
        <xsl:if test="normalize-space($APP_VSA_PMT_DTA/COUNTRY) or $APP_VSA_PMT_DTA/COUNTRY/@xsi:nil">
          <io7:THREE_DIGIT_ABBR>
            <xsl:value-of select="$APP_VSA_PMT_DTA/COUNTRY"/>
          </io7:THREE_DIGIT_ABBR>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$APP_VSA_PMT_DTA/VISA_WRKPMT_NBR"(<string>) to "io7:VISA_NUMBER"(string) -->
      <xsl:if test="$APP_VSA_PMT_DTA/VISA_WRKPMT_NBR">
        <xsl:if test="normalize-space($APP_VSA_PMT_DTA/VISA_WRKPMT_NBR) or $APP_VSA_PMT_DTA/VISA_WRKPMT_NBR/@xsi:nil">
          <io7:VISA_NUMBER>
            <xsl:value-of select="$APP_VSA_PMT_DTA/VISA_WRKPMT_NBR"/>
          </io7:VISA_NUMBER>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$APP_VSA_PMT_DTA/DT_ISSUED"(string) to "io7:VALID_FROM_DATE"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($APP_VSA_PMT_DTA/DT_ISSUED)">
          <io7:VALID_FROM_DATE>
            <xsl:value-of select="$APP_VSA_PMT_DTA/DT_ISSUED"/>
          </io7:VALID_FROM_DATE>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:VALID_FROM_DATE">
            <xsl:value-of select="'1900-01-01'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$APP_VSA_PMT_DTA/PLACE_ISSUED"(<string>) to "io7:VISA_ISSUING_OFFICE"(string) -->
      <xsl:if test="$APP_VSA_PMT_DTA/PLACE_ISSUED">
        <xsl:if test="normalize-space($APP_VSA_PMT_DTA/PLACE_ISSUED) or $APP_VSA_PMT_DTA/PLACE_ISSUED/@xsi:nil">
          <io7:VISA_ISSUING_OFFICE>
            <xsl:value-of select="$APP_VSA_PMT_DTA/PLACE_ISSUED"/>
          </io7:VISA_ISSUING_OFFICE>
        </xsl:if>
      </xsl:if>
      <!-- a simple data mapping: "$APP_VSA_PMT_DTA/EXPIRATN_DT"(string) to "io7:VALID_TO_DATE"(string) -->
      <xsl:choose>
        <xsl:when test="normalize-space($APP_VSA_PMT_DTA/EXPIRATN_DT)">
          <io7:VALID_TO_DATE>
            <xsl:value-of select="$APP_VSA_PMT_DTA/EXPIRATN_DT"/>
          </io7:VALID_TO_DATE>
        </xsl:when>
        <xsl:otherwise>
          <xsl:element name="io7:VALID_TO_DATE">
            <xsl:value-of select="'9999-12-31'"/>
          </xsl:element>
        </xsl:otherwise>
      </xsl:choose>
    </io7:VISA>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
