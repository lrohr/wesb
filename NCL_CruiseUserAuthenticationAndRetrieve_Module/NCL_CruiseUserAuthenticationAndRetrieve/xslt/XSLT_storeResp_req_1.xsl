<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/XSLT_storeResp_req_1.map" md5sum="be9d999404ec935e39de39bc857d0a2f" version="7.5.100" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		XSLT_storeResp_req_1.map
*   Map declaration(s):	XSLT_storeResp_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseUserAuthenticationAndRetrieve%257DAppContext/message%3D%257Bhttp%253A%252F%252FNCL_WESB_Shared_Library%252FNCL_CruiseRetrieveClient_Interface%257DPerform_NCL_CruiseRetrieveClientResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FNCL_CruiseUserAuthenticationAndRetrieve%257DAppContext/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:regexp="http://exslt.org/regular-expressions"
    xmlns:dyn="http://exslt.org/dynamic"
    xmlns:dp="http://www.datapower.com/extensions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://NCL_WESB_Shared_Library/NCL_CruiseRetrieveClient_Interface"
    xmlns:in2="wsdl.http://NCL_WESB_Shared_Library/NCL_CruiseRetrieveClient_Interface"
    xmlns:io="http://NCL_CruiseUserAuthenticationAndRetrieve"
    xmlns:io2="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io3="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io5="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io7="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io6="http://nclapi/schemas"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="http://www.w3.org/2005/08/addressing"
    xmlns:map="http://NCL_CruiseUserAuthenticationAndRetrieve/xslt/XSLT_storeResp_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in in2 str set math fn regexp dyn dp exsl date map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io3:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:XSLT_storeResp_req_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io3:smo" mode="map:XSLT_storeResp_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template match="io3:smo"  mode="map:XSLT_storeResp_req_1">
    <io3:smo>
      <context>
        <correlation>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io:AppContext'"/>
          </xsl:attribute>
          <!-- a structural mapping: "context/correlation/io6:NCL_CruiseUserAuthenticationAndRetrieveRQ"(<Anonymous>) to "io6:NCL_CruiseUserAuthenticationAndRetrieveRQ"(<Anonymous>) -->
          <xsl:if test="context/correlation/io6:NCL_CruiseUserAuthenticationAndRetrieveRQ">
            <xsl:copy-of select="context/correlation/io6:NCL_CruiseUserAuthenticationAndRetrieveRQ"/>
          </xsl:if>
          <xsl:element name="io6:NCL_CruiseUserAuthenticationAndRetrieveRS">
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@AltLangID"(language) to "AltLangID"(language) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@AltLangID">
              <xsl:attribute name="AltLangID">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@AltLangID"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@EchoToken"(StringLength1to128) to "EchoToken"(StringLength1to128) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@EchoToken">
              <xsl:attribute name="EchoToken">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@EchoToken"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@PrimaryLangID"(language) to "PrimaryLangID"(language) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@PrimaryLangID">
              <xsl:attribute name="PrimaryLangID">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@PrimaryLangID"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@RetransmissionIndicator"(boolean) to "RetransmissionIndicator"(boolean) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@RetransmissionIndicator">
              <xsl:attribute name="RetransmissionIndicator">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@RetransmissionIndicator"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@SequenceNmbr"(nonNegativeInteger) to "SequenceNmbr"(nonNegativeInteger) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@SequenceNmbr">
              <xsl:attribute name="SequenceNmbr">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@SequenceNmbr"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Target"(<NMTOKEN>) to "Target"(<NMTOKEN>) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Target">
              <xsl:attribute name="Target">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Target"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TimeStamp"(dateTime) to "TimeStamp"(dateTime) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TimeStamp">
              <xsl:attribute name="TimeStamp">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TimeStamp"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionIdentifier"(StringLength1to32) to "TransactionIdentifier"(StringLength1to32) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionIdentifier">
              <xsl:attribute name="TransactionIdentifier">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionIdentifier"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionStatusCode"(<NMTOKEN>) to "TransactionStatusCode"(<NMTOKEN>) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionStatusCode">
              <xsl:attribute name="TransactionStatusCode">
                <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionStatusCode"/>
              </xsl:attribute>
            </xsl:if>
            <!-- a simple data mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Version"(decimal) to "Version"(decimal) -->
            <xsl:attribute name="Version">
              <xsl:value-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Version"/>
            </xsl:attribute>
            <!-- a structural mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Success"(SuccessType) to "io6:Success"(SuccessType) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Success">
              <xsl:copy-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Success"/>
            </xsl:if>
            <!-- a structural mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Warnings"(WarningsType) to "io6:Warnings"(WarningsType) -->
            <xsl:if test="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Warnings">
              <xsl:copy-of select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Warnings"/>
            </xsl:if>
            <!-- a structural mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:ClientInfo"(<Anonymous>) to "io6:ClientInfo"(<Anonymous>) -->
            <xsl:apply-templates select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:ClientInfo" mode="localClientInfoToClientInfo_1088634733"/>
            <!-- a structural mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:LoyaltyInfo"(<Anonymous>) to "io6:LoyaltyInfo"(CustLoyaltyType) -->
            <xsl:apply-templates select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:LoyaltyInfo" mode="localLoyaltyInfoToLoyaltyInfo_1413017679"/>
            <!-- a structural mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:UserLogin"(<Anonymous>) to "io6:UserLogin"(<Anonymous>) -->
            <xsl:apply-templates select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:UserLogin" mode="localUserLoginToUserLogin_390999316"/>
            <!-- a structural mapping: "body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:VacationPreference"(<Anonymous>) to "io6:VacationPreference"(<Anonymous>) -->
            <xsl:apply-templates select="body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:VacationPreference" mode="localVacationPreferenceToVacationPreference_1229700740"/>
          </xsl:element>
          <!-- a simple data mapping: "context/correlation/passwordLength"(int) to "passwordLength"(int) -->
          <xsl:if test="context/correlation/passwordLength">
            <xsl:element name="passwordLength">
              <xsl:value-of select="context/correlation/passwordLength"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "context/correlation/logId"(string) to "logId"(string) -->
          <xsl:if test="context/correlation/logId">
            <xsl:element name="logId">
              <xsl:value-of select="context/correlation/logId"/>
            </xsl:element>
          </xsl:if>
        </correlation>
      </context>
    </io3:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io3:smo" to "io3:smo".  -->
  <xsl:template name="map:XSLT_storeResp_req_12">
    <xsl:param name="smo"/>
    <context>
      <correlation>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io:AppContext'"/>
        </xsl:attribute>
        <!-- a structural mapping: "$smo/context/correlation/io6:NCL_CruiseUserAuthenticationAndRetrieveRQ"(<Anonymous>) to "io6:NCL_CruiseUserAuthenticationAndRetrieveRQ"(<Anonymous>) -->
        <xsl:if test="$smo/context/correlation/io6:NCL_CruiseUserAuthenticationAndRetrieveRQ">
          <xsl:copy-of select="$smo/context/correlation/io6:NCL_CruiseUserAuthenticationAndRetrieveRQ"/>
        </xsl:if>
        <xsl:element name="io6:NCL_CruiseUserAuthenticationAndRetrieveRS">
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@AltLangID"(language) to "AltLangID"(language) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@AltLangID">
            <xsl:attribute name="AltLangID">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@AltLangID"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@EchoToken"(StringLength1to128) to "EchoToken"(StringLength1to128) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@EchoToken">
            <xsl:attribute name="EchoToken">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@EchoToken"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@PrimaryLangID"(language) to "PrimaryLangID"(language) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@PrimaryLangID">
            <xsl:attribute name="PrimaryLangID">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@PrimaryLangID"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@RetransmissionIndicator"(boolean) to "RetransmissionIndicator"(boolean) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@RetransmissionIndicator">
            <xsl:attribute name="RetransmissionIndicator">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@RetransmissionIndicator"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@SequenceNmbr"(nonNegativeInteger) to "SequenceNmbr"(nonNegativeInteger) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@SequenceNmbr">
            <xsl:attribute name="SequenceNmbr">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@SequenceNmbr"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Target"(<NMTOKEN>) to "Target"(<NMTOKEN>) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Target">
            <xsl:attribute name="Target">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Target"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TimeStamp"(dateTime) to "TimeStamp"(dateTime) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TimeStamp">
            <xsl:attribute name="TimeStamp">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TimeStamp"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionIdentifier"(StringLength1to32) to "TransactionIdentifier"(StringLength1to32) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionIdentifier">
            <xsl:attribute name="TransactionIdentifier">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionIdentifier"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionStatusCode"(<NMTOKEN>) to "TransactionStatusCode"(<NMTOKEN>) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionStatusCode">
            <xsl:attribute name="TransactionStatusCode">
              <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@TransactionStatusCode"/>
            </xsl:attribute>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Version"(decimal) to "Version"(decimal) -->
          <xsl:attribute name="Version">
            <xsl:value-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/@Version"/>
          </xsl:attribute>
          <!-- a structural mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Success"(SuccessType) to "io6:Success"(SuccessType) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Success">
            <xsl:copy-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Success"/>
          </xsl:if>
          <!-- a structural mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Warnings"(WarningsType) to "io6:Warnings"(WarningsType) -->
          <xsl:if test="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Warnings">
            <xsl:copy-of select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:Warnings"/>
          </xsl:if>
          <!-- a structural mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:ClientInfo"(<Anonymous>) to "io6:ClientInfo"(<Anonymous>) -->
          <xsl:apply-templates select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:ClientInfo" mode="localClientInfoToClientInfo_1088634733"/>
          <!-- a structural mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:LoyaltyInfo"(<Anonymous>) to "io6:LoyaltyInfo"(CustLoyaltyType) -->
          <xsl:apply-templates select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:LoyaltyInfo" mode="localLoyaltyInfoToLoyaltyInfo_1413017679"/>
          <!-- a structural mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:UserLogin"(<Anonymous>) to "io6:UserLogin"(<Anonymous>) -->
          <xsl:apply-templates select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:UserLogin" mode="localUserLoginToUserLogin_390999316"/>
          <!-- a structural mapping: "$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:VacationPreference"(<Anonymous>) to "io6:VacationPreference"(<Anonymous>) -->
          <xsl:apply-templates select="$smo/body/in:Perform_NCL_CruiseRetrieveClientResponse/io6:NCL_CruiseRetrieveClientRS/io6:VacationPreference" mode="localVacationPreferenceToVacationPreference_1229700740"/>
        </xsl:element>
        <!-- a simple data mapping: "$smo/context/correlation/passwordLength"(int) to "passwordLength"(int) -->
        <xsl:if test="$smo/context/correlation/passwordLength">
          <xsl:element name="passwordLength">
            <xsl:value-of select="$smo/context/correlation/passwordLength"/>
          </xsl:element>
        </xsl:if>
        <!-- a simple data mapping: "$smo/context/correlation/logId"(string) to "logId"(string) -->
        <xsl:if test="$smo/context/correlation/logId">
          <xsl:element name="logId">
            <xsl:value-of select="$smo/context/correlation/logId"/>
          </xsl:element>
        </xsl:if>
      </correlation>
    </context>
  </xsl:template>

  <!-- This rule represents an element mapping: "io6:ClientInfo" to "io6:ClientInfo".  -->
  <xsl:template match="io6:ClientInfo"  mode="localClientInfoToClientInfo_1088634733">
    <io6:ClientInfo>
      <!-- a simple data mapping: "@Age"(StringLength1to16) to "Age"(StringLength1to16) -->
      <xsl:if test="@Age">
        <xsl:attribute name="Age">
          <xsl:value-of select="@Age"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@BirthDate"(StringLength1to16) to "BirthDate"(StringLength1to16) -->
      <xsl:if test="@BirthDate">
        <xsl:attribute name="BirthDate">
          <xsl:value-of select="@BirthDate"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@ContactType"(StringLength1to32) to "ContactType"(StringLength1to32) -->
      <xsl:if test="@ContactType">
        <xsl:attribute name="ContactType">
          <xsl:value-of select="@ContactType"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@DefaultInd"(string) to "DefaultInd"(string) -->
      <xsl:if test="@DefaultInd">
        <xsl:attribute name="DefaultInd">
          <xsl:value-of select="@DefaultInd"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@EmergencyFlag"(boolean) to "EmergencyFlag"(boolean) -->
      <xsl:if test="@EmergencyFlag">
        <xsl:attribute name="EmergencyFlag">
          <xsl:value-of select="@EmergencyFlag"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@Gender"(<NMTOKEN>) to "Gender"(<NMTOKEN>) -->
      <xsl:if test="@Gender">
        <xsl:attribute name="Gender">
          <xsl:value-of select="@Gender"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@GuestOccupation"(StringLength1to64) to "GuestOccupation"(StringLength1to64) -->
      <xsl:if test="@GuestOccupation">
        <xsl:attribute name="GuestOccupation">
          <xsl:value-of select="@GuestOccupation"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@GuestRefNumber"(StringLength1to16) to "GuestRefNumber"(StringLength1to16) -->
      <xsl:if test="@GuestRefNumber">
        <xsl:attribute name="GuestRefNumber">
          <xsl:value-of select="@GuestRefNumber"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@LoyalLevel"(StringLength1to16) to "LoyalLevel"(StringLength1to16) -->
      <xsl:if test="@LoyalLevel">
        <xsl:attribute name="LoyalLevel">
          <xsl:value-of select="@LoyalLevel"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@LoyaltyMembershipID"(StringLength1to32) to "LoyaltyMembershipID"(StringLength1to32) -->
      <xsl:if test="@LoyaltyMembershipID">
        <xsl:attribute name="LoyaltyMembershipID">
          <xsl:value-of select="@LoyaltyMembershipID"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@Nationality"(ISO3166) to "Nationality"(ISO3166) -->
      <xsl:if test="@Nationality">
        <xsl:attribute name="Nationality">
          <xsl:value-of select="@Nationality"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@Relation"(StringLength1to32) to "Relation"(StringLength1to32) -->
      <xsl:if test="@Relation">
        <xsl:attribute name="Relation">
          <xsl:value-of select="@Relation"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@RPH"(RPH_Type) to "RPH"(RPH_Type) -->
      <xsl:if test="@RPH">
        <xsl:attribute name="RPH">
          <xsl:value-of select="@RPH"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@ShareMarketInd"(<NMTOKEN>) to "ShareMarketInd"(<NMTOKEN>) -->
      <xsl:if test="@ShareMarketInd">
        <xsl:attribute name="ShareMarketInd">
          <xsl:value-of select="@ShareMarketInd"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@ShareSynchInd"(<NMTOKEN>) to "ShareSynchInd"(<NMTOKEN>) -->
      <xsl:if test="@ShareSynchInd">
        <xsl:attribute name="ShareSynchInd">
          <xsl:value-of select="@ShareSynchInd"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a structural mapping: "io6:PersonName"(PersonNameType) to "io6:PersonName"(PersonNameType) -->
      <xsl:if test="io6:PersonName">
        <xsl:copy-of select="io6:PersonName"/>
      </xsl:if>
      <!-- a for-each transform: "io6:Telephone"(TelephoneInfoType) to "io6:Telephone"(TelephoneInfoType) -->
      <xsl:for-each select="io6:Telephone">
        <xsl:copy-of select="."/>
      </xsl:for-each>
      <!-- a for-each transform: "io6:Address"(AddressInfoType) to "io6:Address"(AddressInfoType) -->
      <xsl:for-each select="io6:Address">
        <xsl:copy-of select="."/>
      </xsl:for-each>
      <!-- a for-each transform: "io6:Email"(EmailType) to "io6:Email"(EmailType) -->
      <xsl:for-each select="io6:Email">
        <xsl:copy-of select="."/>
      </xsl:for-each>
      <!-- a for-each transform: "io6:URL"(URL_Type) to "io6:URL"(URL_Type) -->
      <xsl:for-each select="io6:URL">
        <xsl:copy-of select="."/>
      </xsl:for-each>
      <!-- a for-each transform: "io6:CompanyName"(CompanyNameType) to "io6:CompanyName"(CompanyNameType) -->
      <xsl:for-each select="io6:CompanyName">
        <xsl:copy-of select="."/>
      </xsl:for-each>
      <!-- a for-each transform: "io6:EmployeeInfo"(EmployeeInfoType) to "io6:EmployeeInfo"(EmployeeInfoType) -->
      <xsl:for-each select="io6:EmployeeInfo">
        <xsl:copy-of select="."/>
      </xsl:for-each>
    </io6:ClientInfo>
  </xsl:template>

  <!-- This rule represents an element mapping: "io6:LoyaltyInfo" to "io6:LoyaltyInfo".  -->
  <xsl:template match="io6:LoyaltyInfo"  mode="localLoyaltyInfoToLoyaltyInfo_1413017679">
    <io6:LoyaltyInfo>
      <!-- a simple data mapping: "@EffectiveDate"(date) to "EffectiveDate"(date) -->
      <xsl:if test="@EffectiveDate">
        <xsl:attribute name="EffectiveDate">
          <xsl:value-of select="@EffectiveDate"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@ExpireDate"(date) to "ExpireDate"(date) -->
      <xsl:if test="@ExpireDate">
        <xsl:attribute name="ExpireDate">
          <xsl:value-of select="@ExpireDate"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@LoyalLevel"(StringLength1to16) to "LoyalLevel"(StringLength1to16) -->
      <xsl:if test="@LoyalLevel">
        <xsl:attribute name="LoyalLevel">
          <xsl:value-of select="@LoyalLevel"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@ShareMarketInd"(<NMTOKEN>) to "ShareMarketInd"(<NMTOKEN>) -->
      <xsl:if test="@ShareMarketInd">
        <xsl:attribute name="ShareMarketInd">
          <xsl:value-of select="@ShareMarketInd"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@ShareSynchInd"(<NMTOKEN>) to "ShareSynchInd"(<NMTOKEN>) -->
      <xsl:if test="@ShareSynchInd">
        <xsl:attribute name="ShareSynchInd">
          <xsl:value-of select="@ShareSynchInd"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@SignupDate"(date) to "SignupDate"(date) -->
      <xsl:if test="@SignupDate">
        <xsl:attribute name="SignupDate">
          <xsl:value-of select="@SignupDate"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@SingleVendorInd"(<NMTOKEN>) to "SingleVendorInd"(<NMTOKEN>) -->
      <xsl:if test="@SingleVendorInd">
        <xsl:attribute name="SingleVendorInd">
          <xsl:value-of select="@SingleVendorInd"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@MembershipID"(StringLength1to32) to "MembershipID"(StringLength1to32) -->
      <xsl:if test="@MembershipID">
        <xsl:attribute name="MembershipID">
          <xsl:value-of select="@MembershipID"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@ProgramID"(StringLength1to16) to "ProgramID"(StringLength1to16) -->
      <xsl:if test="@ProgramID">
        <xsl:attribute name="ProgramID">
          <xsl:value-of select="@ProgramID"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@RPH"(RPH_Type) to "RPH"(RPH_Type) -->
      <xsl:if test="@RPH">
        <xsl:attribute name="RPH">
          <xsl:value-of select="@RPH"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@TravelSector"(OTA_CodeType) to "TravelSector"(OTA_CodeType) -->
      <xsl:if test="@TravelSector">
        <xsl:attribute name="TravelSector">
          <xsl:value-of select="@TravelSector"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@VendorCode"(ListOfStringLength1to8) to "VendorCode"(ListOfStringLength1to8) -->
      <xsl:if test="@VendorCode">
        <xsl:attribute name="VendorCode">
          <xsl:value-of select="@VendorCode"/>
        </xsl:attribute>
      </xsl:if>
    </io6:LoyaltyInfo>
  </xsl:template>

  <!-- This rule represents an element mapping: "io6:UserLogin" to "io6:UserLogin".  -->
  <xsl:template match="io6:UserLogin"  mode="localUserLoginToUserLogin_390999316">
    <io6:UserLogin>
      <!-- a simple data mapping: "@Password"(StringLength1to64) to "Password"(StringLength1to64) -->
      <xsl:if test="@Password">
        <xsl:attribute name="Password">
          <xsl:value-of select="@Password"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@UserLoginName"(StringLength1to64) to "UserLoginName"(StringLength1to64) -->
      <xsl:attribute name="UserLoginName">
        <xsl:value-of select="@UserLoginName"/>
      </xsl:attribute>
      <!-- a simple data mapping: "@UserType"(StringLength1to16) to "UserType"(StringLength1to16) -->
      <xsl:attribute name="UserType">
        <xsl:value-of select="@UserType"/>
      </xsl:attribute>
    </io6:UserLogin>
  </xsl:template>

  <!-- This rule represents an element mapping: "io6:VacationPreference" to "io6:VacationPreference".  -->
  <xsl:template match="io6:VacationPreference"  mode="localVacationPreferenceToVacationPreference_1229700740">
    <io6:VacationPreference>
      <!-- a simple data mapping: "@FutureCruisePlan"(StringLength0to128) to "FutureCruisePlan"(StringLength0to128) -->
      <xsl:if test="@FutureCruisePlan">
        <xsl:attribute name="FutureCruisePlan">
          <xsl:value-of select="@FutureCruisePlan"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@PreferredBookingMode"(StringLength0to128) to "PreferredBookingMode"(StringLength0to128) -->
      <xsl:if test="@PreferredBookingMode">
        <xsl:attribute name="PreferredBookingMode">
          <xsl:value-of select="@PreferredBookingMode"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@PreferredCruiseLength"(StringLength0to128) to "PreferredCruiseLength"(StringLength0to128) -->
      <xsl:if test="@PreferredCruiseLength">
        <xsl:attribute name="PreferredCruiseLength">
          <xsl:value-of select="@PreferredCruiseLength"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@PreferredCruiseTime"(StringLength0to128) to "PreferredCruiseTime"(StringLength0to128) -->
      <xsl:if test="@PreferredCruiseTime">
        <xsl:attribute name="PreferredCruiseTime">
          <xsl:value-of select="@PreferredCruiseTime"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@PreviouslyCruised"(StringLength0to32) to "PreviouslyCruised"(StringLength0to32) -->
      <xsl:if test="@PreviouslyCruised">
        <xsl:attribute name="PreviouslyCruised">
          <xsl:value-of select="@PreviouslyCruised"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "@PreviouslyCruisedNumber"(StringLength0to32) to "PreviouslyCruisedNumber"(StringLength0to32) -->
      <xsl:if test="@PreviouslyCruisedNumber">
        <xsl:attribute name="PreviouslyCruisedNumber">
          <xsl:value-of select="@PreviouslyCruisedNumber"/>
        </xsl:attribute>
      </xsl:if>
      <!-- a simple data mapping: "io6:DesiredDestination"(StringLength0to128) to "io6:DesiredDestination"(StringLength0to128) -->
      <xsl:for-each select="io6:DesiredDestination">
        <io6:DesiredDestination>
          <xsl:value-of select="."/>
        </io6:DesiredDestination>
      </xsl:for-each>
      <!-- a simple data mapping: "io6:PreviousCruiseLines"(StringLength0to128) to "io6:PreviousCruiseLines"(StringLength0to128) -->
      <xsl:for-each select="io6:PreviousCruiseLines">
        <io6:PreviousCruiseLines>
          <xsl:value-of select="."/>
        </io6:PreviousCruiseLines>
      </xsl:for-each>
    </io6:VacationPreference>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
